Changed from version 1.20 --> 1.22

changes:
- Constructor for 2d Version taking istream 

bug fixes:
- export method duneNotifyMacroGridChanges 
- METIS check for Debian parmetis package

Index: m4/metis.m4
===================================================================
--- m4/metis.m4	(revision 1176)
+++ m4/metis.m4	(revision 1181)
@@ -13,8 +13,10 @@
 LIBS=""
 
 ## do nothing if no --with-metis was supplied
-if test x$with_metis == x && test x$with_parmetis != x ; then
+if test x$with_parmetis != x ; then
   with_metis=$with_parmetis
+  AC_MSG_WARN([Using METIS version of ParMETIS!])
+  ALU_METIS_VERSION="(ParMETIS)"
 fi 
 
 ## do nothing if no --with-metis was supplied
Index: m4/parmetis.m4
===================================================================
--- m4/parmetis.m4	(revision 1176)
+++ m4/parmetis.m4	(revision 1181)
@@ -90,8 +90,14 @@
   ALUGRID_PKG_LIBS="$ALUGRID_PKG_LIBS $PARMETIS_LIBS"
   ALUGRID_PKG_CPPFLAGS="$ALUGRID_PKG_CPPFLAGS $PARMETIS_CPPFLAGS"
 
+  ALU_PARMETIS_VFILE=$PARMETISROOT/VERSION
+  ALU_PARMETIS_VERSION="(unknown)"
+  if test -f $PARMETISROOT/VERSION ; then 
+    ALU_PARMETIS_VERSION="(Version `cat $ALU_PARMETIS_VFILE | head -1 | cut -d " " -f 3`)"
+  fi  
+
   # set variable for summary
-  with_parmetis="yes (Todo: Version)"
+  with_parmetis="yes $ALU_PARMETIS_VERSION"
 else
   AC_SUBST(PARMETIS_LIBS, "")
   AC_SUBST(PARMETIS_LDFLAGS, "")
Index: m4/alugrid_all.m4
===================================================================
--- m4/alugrid_all.m4	(revision 1176)
+++ m4/alugrid_all.m4	(revision 1181)
@@ -37,7 +37,7 @@
 dnl check all components
   AC_REQUIRE([ALUGRID_SERIAL_PARALLEL])
   AC_REQUIRE([ALUGRID_PATH_METIS])
-dnl  AC_REQUIRE([ALUGRID_PATH_PARMETIS])
+  AC_REQUIRE([ALUGRID_PATH_PARMETIS])
   AC_REQUIRE([ALUGRID_PATH_PARTY])
 
 dnl convenience-variables if every found package should be used
@@ -65,7 +65,7 @@
 echo "-------------------------------------"
 echo  
 echo "METIS............: $with_metis"
-dnl echo "ParMETIS.........: $with_parmetis"
+echo "ParMETIS.........: $with_parmetis"
 echo "PARTY............: $with_party"
 echo "MPI..............: $with_mpi"
 echo
Index: src/alugrid_2d.h
===================================================================
--- src/alugrid_2d.h	(revision 1176)
+++ src/alugrid_2d.h	(revision 1181)
@@ -1,6 +1,8 @@
 #ifndef __ALUGRID_2D_H_INCLUDED__
 #define __ALUGRID_2D_H_INCLUDED__
 
+#define ALUGRID_NOTEMPFILE_2D
+
 // include all headers 
 #include "stlheaders.h"
 
Index: src/alu2d/handle.cc
===================================================================
--- src/alu2d/handle.cc	(revision 1176)
+++ src/alu2d/handle.cc	(revision 1181)
@@ -11,24 +11,85 @@
   _nconfDeg(pnconfDeg), refinement_rule(pref_rule) {
   setup_grid(macroname);      
 }
+
+Hmesh::Hmesh(istream& macrofile, int pnconfDeg, Refco::tag_t pref_rule) :
+  _nconfDeg(pnconfDeg), refinement_rule(pref_rule) 
+{
+  double time;
+  long unsigned int nbr;
+#ifndef NDEBUG 
+  cerr << "\n  Hmesh::Hmesh reads istream: " << endl ;
+#endif
+
+  bool restart = setup_grid(macrofile, time, nbr);
+  if( restart ) 
+  { 
+    cerr << "ERROR: Hmesh constructor with invalid istream called!";
+    abort();
+  }
+}
+
 Hmesh::Hmesh(const char *macroname,int pnconfDeg) :
-  _nconfDeg(pnconfDeg), refinement_rule(Refco::quart) {
+  _nconfDeg(pnconfDeg), refinement_rule(Refco::quart) 
+{
   setup_grid(macroname);    
 }
+
 Hmesh::Hmesh(const char *macroname, Refco::tag_t  pref_rule) :
-  _nconfDeg(0), refinement_rule(pref_rule) {
+  _nconfDeg(0), refinement_rule(pref_rule) 
+{
   setup_grid(macroname);    
 }
 
-void Hmesh::setup_grid(const char *macroname) {
+void Hmesh::setup_grid(const char* filename) 
+{
+#ifndef NDEBUG 
+  cerr << "\n  Hmesh_basic::ascireadtriang(?) opens: " ;
+  cerr << filename << "\n" << endl ;
+#endif
+
+  ifstream in;
+  in.open(filename, ios::in) ;
+
+  if (!in.good()) {
+    in.clear();
+    string macro(filename);
+    macro+=".macro";
+    cerr << "Warning: file " << filename << " not found, trying " << macro << endl;
+    in.open(macro.c_str(), ios::in) ;
+  }
+  assert(in) ;
+
+  double time;
+  long unsigned int nbr;
+
+  // call setup with istream 
+  bool restart = setup_grid(in, time, nbr);
+
+  /* END: set periodic neighbours of vertices */
+  if (restart) {
+    double time2 = time;
+    long unsigned int nbr2 = nbr;
+    assert( false );
+    recoverGrid(filename,time2,nbr2);
+    if (fabs(time2-time) + 
+        fabs((double (nbr2-nbr)))> 1e-5) {
+      cerr << "ERROR in Hmesh::setup_grid: "
+           << "backup-file and macro-grid file not compatible" << endl;
+      abort();
+    }
+  }
+}
+
+bool Hmesh::setup_grid(istream& macrofile, double& time, long unsigned int& nbr) 
+{
   ncv=NULL;
   adp = new Multivertexadapter;
   _pro_el=0;  // new Prolong_basic;
   _rest_el=0; // new Restrict_basic;
 
-  double time;
-  long unsigned int nbr;
-  bool restart=ascireadtriang (macroname,time,nbr);
+  bool restart = ascireadtriang (macrofile,time,nbr);
+
   /* set periodic neighbours of vertices */
   {
     Listwalkptr < Hmesh_basic::hbndel_t > walkb(*this);
@@ -54,27 +115,17 @@
       {
         int i,j;
         for (i=0;i<2;i++)
-  {
+        {
           Vertex *pnv = v->get_pernb(i);
           for (j=0;j<pnv->get_nr_of_per_nbs();j++)
             v->set_pernb(pnv->get_pernb(j));
-  }
+        }
         assert(v->get_nr_of_per_nbs() == 3);
       }
     }
   }
-  /* END: set periodic neighbours of vertices */
-  if (restart) {
-    double time2 = time;
-    long unsigned int nbr2 = nbr;
-    recoverGrid(macroname,time2,nbr2);
-    if (fabs(time2-time) + 
-        fabs((double (nbr2-nbr)))> 1e-5) {
-      cerr << "ERROR in Hmesh::setup_grid: "
-           << "backup-file and macro-grid file not compatible" << endl;
-      abort();
-    }
-  }
+
+  return restart;
 }
 
 Hmesh::~Hmesh() {
Index: src/alu2d/handle.h
===================================================================
--- src/alu2d/handle.h	(revision 1176)
+++ src/alu2d/handle.h	(revision 1181)
@@ -846,9 +846,9 @@
     Hmesh_basic & operator = (const Hmesh_basic &) ;
 
  protected:
-    void asciwritetriang(ofstream &) ;
+    void asciwritetriang(ostream &) ;
     
-    void ascireadtriang(ifstream &) ;
+    void ascireadtriang(istream &) ;
 
   public :
    Hmesh_basic() : 
@@ -945,10 +945,11 @@
   nconf_vtx_t *ncv;
 
   void setup_grid(const char *);
+  bool setup_grid( istream& , double& , unsigned long int& );
 
-  bool ascireadtriang(const char *,double&, unsigned long int&) ;
+  //bool ascireadtriang(const char *,double&, unsigned long int&) ;
 
-  bool ascireadtriang(ifstream &,double&, unsigned long int&) ;
+  bool ascireadtriang(istream &,double&, unsigned long int&) ;
 
   void asciwritetriang(const char *,double , unsigned long int) ;
 
@@ -962,38 +963,42 @@
 
   Hmesh();
 
-  Hmesh(const char *,int,Refco::tag_t pref_rule) ;
+  Hmesh(const char *,int, Refco::tag_t pref_rule) ;
 
+  // constructor taking istream with macro triang
+  // number of hanging nodes and refinement rule 
+  Hmesh(istream&, int, Refco::tag_t pref_rule) ;
+
   Hmesh(const char *, Refco::tag_t pref_rule = Refco::ref_1 ) ;
 
   Hmesh(const char *,int) ;
 
-    virtual ~Hmesh() ;
+  virtual ~Hmesh() ;
 
-    void storeGrid(const char*,
-       double , unsigned long int);
+  void storeGrid(const char*,
+     double , unsigned long int);
 
-    bool recoverGrid(const char*,
-                     double&, unsigned long int&);
+  bool recoverGrid(const char*,
+                   double&, unsigned long int&);
 
-    void storeIndicies(ostream& out);
-    void recoverIndicies(istream& in);
+  void storeIndicies(ostream& out);
+  void recoverIndicies(istream& in);
 
-    void refine() ;
+  void refine() ;
 
-    // done call notify and loadBalancer
-    bool duneAdapt (AdaptRestrictProlong2dType & arp);
+  // done call notify and loadBalancer
+  bool duneAdapt (AdaptRestrictProlong2dType & arp);
 
-    bool checkConf();
+  bool checkConf();
 
-    void coarse() ;
+  void coarse() ;
 
-    void refresh() ;
+  void refresh() ;
 
-    void setdata(void (*)(Element &)) ;
+  void setdata(void (*)(Element &)) ;
 
 #if USE_ALUGRID_XDISPLAY
-    void draw(Xdisplay & ) ; 
+  void draw(Xdisplay & ) ; 
 #endif
 
 } ;
Index: src/alu2d/hdlrw.cc
===================================================================
--- src/alu2d/hdlrw.cc	(revision 1176)
+++ src/alu2d/hdlrw.cc	(revision 1181)
@@ -5,8 +5,11 @@
 #include "triang.h"
 #include "handle.h"
 
-bool Hmesh :: ascireadtriang(const char *filename,
-           double& time, unsigned long int& nbr) 
+/*
+bool Hmesh :: 
+ascireadtriang(const char *filename,
+               double& time, 
+               unsigned long int& nbr) 
 {
 #ifndef NDEBUG 
   cerr << "\n  Hmesh_basic::ascireadtriang(?) opens: " ;
@@ -26,9 +29,12 @@
   assert(in) ;
   return ascireadtriang(in,time,nbr);
 }
-bool Hmesh :: ascireadtriang(ifstream &in,
-           double& time, unsigned long int& nbr)
+*/
 
+bool Hmesh :: 
+ascireadtriang(istream &in,
+               double& time, 
+               unsigned long int& nbr)
 {
   bool isbackup=false;
   // Wiederaufsetzen?
@@ -75,7 +81,7 @@
   return isbackup;
 }
  
-void Hmesh_basic :: ascireadtriang(ifstream &in) {
+void Hmesh_basic :: ascireadtriang(istream &in) {
 
   Vertex ** v = 0 ;
 
@@ -343,7 +349,7 @@
   Hmesh_basic::asciwritetriang(out);
 }
  
-void Hmesh_basic::asciwritetriang(ofstream &out) {
+void Hmesh_basic::asciwritetriang(ostream &out) {
   {
  
     Listwalk_impl < Vertex > walk(vl) ;
@@ -561,56 +567,57 @@
   // in >> time;
   // in >> nbr;
   // Gitter wiederherstellen
-  for( int level = 0 ;; level++ ) {
+  for( int level = 0 ;; level++ ) 
+  {
     {
       Levelwalk<Element> walk(mel, level);
       if( !walk.size() )
         break;
-      for( walk.first() ; !walk.done() ; walk.next() ) {
+      for( walk.first() ; !walk.done() ; walk.next() ) 
+      {
         char flag;
         in.get(flag);
-        switch (flag) {
-	case Thinelement::unsplit:
-	  break;
-	case Thinelement::triang_bnd:
-	  cerr << "ERROR (Hmesh::recoverGrid()): "
-	       << "splitrule \"triang_bnd\" is not allowed for elements!"
-	       << endl;
-	  abort();
-	  break;
-	case Thinelement::triang_conf2:
-	  walk.getitem().mark(Refco::ref_1);
-	  break;
-	case Thinelement::triang_quarter:          
-	  walk.getitem().mark(Refco::quart);
-	  break;
-	case Thinelement::compatibility:
-	  if (!compwarn)
-	    {
-              cerr << "WARNING (Hmesh::recoverGrid()): "
-		   << "using compatibility mode for obsolete file format!"
-		   << endl;
-              compwarn = 1;
-	    }
-	  walk.getitem().mark(Refco::ref_1);
-	  break;
-	default:
-	  cerr << "ERROR (Hmesh::recoverGrid()): "
-	       << "unknown splitrule!"
-	       << endl;
-	  abort();
-	}
+        switch (flag) 
+        {
+          case Thinelement::unsplit:
+            break;
+          case Thinelement::triang_bnd:
+            cerr << "ERROR (Hmesh::recoverGrid()): "
+                 << "splitrule \"triang_bnd\" is not allowed for elements!"
+                 << endl;
+            abort();
+            break;
+          case Thinelement::triang_conf2:
+            walk.getitem().mark(Refco::ref_1);
+            break;
+          case Thinelement::triang_quarter:          
+            walk.getitem().mark(Refco::quart);
+            break;
+          case Thinelement::compatibility:
+            if (!compwarn)
+            {
+                    cerr << "WARNING (Hmesh::recoverGrid()): "
+             << "using compatibility mode for obsolete file format!"
+             << endl;
+                    compwarn = 1;
+            }
+            walk.getitem().mark(Refco::ref_1);
+            break;
+          default:
+            cerr << "ERROR (Hmesh::recoverGrid()): "
+                 << "unknown splitrule!"
+                 << endl;
+            abort();
+         }
+        }
       }
-    }
     refine();
   }
 
-
   // read indices 
   recoverIndicies(in);
  
   cout << " done." << endl;
-
   return true;
 }
 
Index: src/alu2d/triang.cc
===================================================================
--- src/alu2d/triang.cc	(revision 1176)
+++ src/alu2d/triang.cc	(revision 1181)
@@ -244,13 +244,13 @@
 // ***************************************************
 // #begin(method)
 // #method:
-//   void Element::write(ofstream & out) const
+//   void Element::write(ostream & out) const
 // #parameters:
 // #description:
 //   Rausschreiben des Dreicks (unvollst"andig)
 // #end(method)
 // ***************************************************
-void Triang::write(ofstream & out) const {
+void Triang::write(ostream & out) const {
   connect.write(out) ;
   //  data.write(out) ;
   out << endl ;
@@ -259,9 +259,9 @@
 // ***************************************************
 // #begin(method)
 // #method:
-//   void Element::read(ifstream & in, Vertex ** look, const int len)
+//   void Element::read(istream & in, Vertex ** look, const int len)
 // #parameters:
-//   \ ifstream& | io    | Eingabestrom
+//   \ istream& | io    | Eingabestrom
 //   \ Vertex**  | look  | Liste von Vertexpointern
 //   \ const int | len   | Gr"o"se der Liste look
 // #description:
@@ -270,7 +270,7 @@
 //   des Dreiecks gew"ahlt.
 // #end(method)
 // ***************************************************
-void Triang::read(ifstream & in, Vertex ** look, const int len) {
+void Triang::read(istream & in, Vertex ** look, const int len) {
   Hier < Element > :: read(in) ;
   connect.read(in, look, len) ;
   init() ;
@@ -1215,7 +1215,7 @@
   
 }
 
-void Bndel_triang::write(ofstream & out) const {
+void Bndel_triang::write(ostream & out) const {
 
   out << (int) type() << "  " ;
 
@@ -1225,7 +1225,7 @@
   
 }
 
-void Bndel_triang::read(ifstream & in, Vertex ** v, const int nv) {
+void Bndel_triang::read(istream & in, Vertex ** v, const int nv) {
 
   int c ;
 
@@ -1278,7 +1278,7 @@
 
 }
 
-void Bndel::c::write(ofstream &out) const {
+void Bndel::c::write(ostream &out) const {
 
   // out << nv << "  " ;
 
@@ -1288,7 +1288,7 @@
     
 }
 
-void Bndel::c::read(ifstream & in, Vertex ** v, const int l) {
+void Bndel::c::read(istream & in, Vertex ** v, const int l) {
 
   int c ;
 
Index: src/alu2d/triang.h
===================================================================
--- src/alu2d/triang.h	(revision 1176)
+++ src/alu2d/triang.h	(revision 1181)
@@ -31,9 +31,9 @@
    ~Triang() { }
 
 
-    void write(ofstream & ) const ;
+    void write(ostream & ) const ;
 
-    void read(ifstream &, Vertex ** , const int ) ;
+    void read(istream &, Vertex ** , const int ) ;
 
 
   private:
@@ -98,9 +98,9 @@
       return new Bndel_triang(v1,v2,ptyp);
     }
 
-    void write(ofstream &) const ;
+    void write(ostream &) const ;
 
-    void read(ifstream &, Vertex ** , const int ) ;
+    void read(istream &, Vertex ** , const int ) ;
 
     int split(void *(&)[nparts], Listagency < Vertex > *,
               Multivertexadapter &, nconf_vtx_t *ncv,splitrule_t,
Index: src/alu2d/grid.h
===================================================================
--- src/alu2d/grid.h	(revision 1176)
+++ src/alu2d/grid.h	(revision 1181)
@@ -71,9 +71,9 @@
     int isfree() const { return refcount == 0 ; }
 
 
-    virtual void write(ofstream &) const = 0 ;
+    virtual void write(ostream &) const = 0 ;
 
-    virtual void read(ifstream &) = 0 ;
+    virtual void read(istream &) = 0 ;
 
 
     friend class Hmesh;
@@ -211,10 +211,10 @@
     virtual const double (& coord() const )[ncoord] = 0 ;
 
 
-    virtual void write(ofstream &) const = 0 ;
+    virtual void write(ostream &) const = 0 ;
 
 
-    virtual void read(ifstream &) = 0 ;
+    virtual void read(istream &) = 0 ;
  
 
     int get_nr_of_per_nbs()
@@ -294,9 +294,9 @@
     const double (& coordTest() const )[ncoord] { return vcoord ; }
     const double (& coord() const )[ncoord] { return vcoord ; }
 
-    void write(ofstream &) const ;
+    void write(ostream &) const ;
 
-    void read(ifstream &) ;
+    void read(istream &) ;
 
     friend ostream& operator<<(ostream& os, const Fullvertex& fv) {
       return os << "(" << fv.vcoord[0] << "," << fv.vcoord[1] << ")";
@@ -311,8 +311,8 @@
       sethdl(phdl);
     }
     ~Edge();
-    void write(ofstream &) const ;
-    void read(ifstream &) ;
+    void write(ostream &) const ;
+    void read(istream &) ;
 };
 class Triang ;
 class Bndel_triang ;
@@ -409,9 +409,9 @@
 
     virtual int segmentIndex() const = 0;
 
-    virtual void write(ofstream &) const = 0 ;
+    virtual void write(ostream &) const = 0 ;
 
-    virtual void read(ifstream &, Vertex **, const int ) = 0 ;
+    virtual void read(istream &, Vertex **, const int ) = 0 ;
 
     virtual int split(void * (&) [nparts], Listagency < Vertex > *,
                       Multivertexadapter &,nconf_vtx_t *,splitrule_t,
@@ -523,9 +523,9 @@
 
       void unset(int i) { vtx[i]->detach() ; vtx[i] = 0 ; }
 
-      void write(ofstream &) const ;
+      void write(ostream &) const ;
 
-      void read(ifstream &, Vertex ** , const int ) ;
+      void read(istream &, Vertex ** , const int ) ;
 
       int check();
 
@@ -886,9 +886,9 @@
     }
 
 
-    void write(ofstream & ) const { }
+    void write(ostream & ) const { }
 
-    void read(ifstream & ) { }
+    void read(istream & ) { }
 
 } ;
 // #end(class)
@@ -921,9 +921,9 @@
 
     void unset(int i) { vtx[i]->detach() ; vtx[i] = 0 ; }
 
-    void write(ofstream &) const ;
+    void write(ostream &) const ;
 
-    void read(ifstream &, Vertex ** , const int ) ;
+    void read(istream &, Vertex ** , const int ) ;
 
   } connect ;
 
Index: src/alu2d/grid_imp.cc
===================================================================
--- src/alu2d/grid_imp.cc	(revision 1176)
+++ src/alu2d/grid_imp.cc	(revision 1181)
@@ -50,15 +50,15 @@
 // ***************************************************
 // #begin(method)
 // #method:
-//   void Fullvertex::write(ofstream & out) const
+//   void Fullvertex::write(ostream & out) const
 // #parameters:
-//   \ ofstream | &out | output--stream
+//   \ ostream | &out | output--stream
 // #description:
 //   Ausgabe der Punktkoordinaten
 // #end(method)
 // ***************************************************
 
-inline void Fullvertex::write(ofstream & out) const {
+inline void Fullvertex::write(ostream & out) const {
 
   for(int i = 0 ; i < ncoord ; i ++ ) out << vcoord[i] << "  " ;
    
@@ -68,15 +68,15 @@
 // ***************************************************
 // #begin(method)
 // #method:
-//   void Fullvertex::read(ifstream & in)
+//   void Fullvertex::read(istream & in)
 // #parameters:
-//   \ ifstream | &in | input--stream
+//   \ istream | &in | input--stream
 // #description:
 //   Einlesen der Punktkoordinaten
 // #end(method)
 // ***************************************************
 
-inline void Fullvertex::read(ifstream & in) {
+inline void Fullvertex::read(istream & in) {
 
   for(int i = 0 ; i < ncoord ; i ++) 
 
@@ -86,15 +86,15 @@
 // ***************************************************
 // #begin(method)
 // #method:
-//   void Edge::write(ofstream & out) const
+//   void Edge::write(ostream & out) const
 // #parameters:
-//   \ ofstream | &out | output--stream
+//   \ ostream | &out | output--stream
 // #description:
 //   Ausgabe der Punktkoordinaten
 // #end(method)
 // ***************************************************
 
-inline void Edge::write(ofstream & out) const {
+inline void Edge::write(ostream & out) const {
 
   out << getIndex();
   out << endl ;
@@ -103,15 +103,15 @@
 // ***************************************************
 // #begin(method)
 // #method:
-//   void Edge::read(ifstream & in)
+//   void Edge::read(istream & in)
 // #parameters:
-//   \ ifstream | &in | input--stream
+//   \ istream | &in | input--stream
 // #description:
 //   Einlesen der Punktkoordinaten
 // #end(method)
 // ***************************************************
 
-inline void Edge::read(ifstream & in) {
+inline void Edge::read(istream & in) {
 
   in >> setIndex();
 
@@ -545,13 +545,13 @@
 // ***************************************************
 // #begin(method)
 // #method:
-//   void Element::c::write(ofstream &out) const
+//   void Element::c::write(ostream &out) const
 // #parameters:
 // #description:
 //   Ausschreiben der connect-Daten (privat)
 // #end(method)
 // ***************************************************
-inline void Element::c::write(ofstream &out) const {
+inline void Element::c::write(ostream &out) const {
   for(int i = 0 ; i < nv ; i ++ ) 
   {
     out << (vtx[i] ? vtx[i]->Listagent < Vertex > :: number() : -1 ) << "  " ;
@@ -564,13 +564,13 @@
 // ***************************************************
 // #begin(method)
 // #method:
-//   void Element::c::read(ifstream & in, Vertex ** v, const int l) 
+//   void Element::c::read(istream & in, Vertex ** v, const int l) 
 // #parameters:
 //   Einlesen der connect-Daten (privat)
 // #description:
 // #end(method)
 // ***************************************************
-inline void Element::c::read(ifstream & in, Vertex ** v, const int l) {
+inline void Element::c::read(istream & in, Vertex ** v, const int l) {
   int c ;
   for(int i = 0 ; i < nv ; i ++ ) {
     in >> c ;
Index: src/alugrid_parallel.h
===================================================================
--- src/alugrid_parallel.h	(revision 1176)
+++ src/alugrid_parallel.h	(revision 1181)
@@ -5,6 +5,8 @@
 
 #define _ANSI_HEADER 
 
+#define ALUGRID_EXPORT_MACROGRID_CHANGES
+
 namespace ALUGridSpace {
 
 // the parallel stuff 
Index: src/duneinterface/gitter_dune_pll_impl.cc
===================================================================
--- src/duneinterface/gitter_dune_pll_impl.cc	(revision 1176)
+++ src/duneinterface/gitter_dune_pll_impl.cc	(revision 1181)
@@ -20,7 +20,6 @@
        TreeIterator < Gitter :: helement_STI, is_leaf < Gitter :: helement_STI> > > *) p) ;
 }
 
-
 bool GitterDunePll :: duneNotifyNewGrid ()
 {
   assert (debugOption (20) ? (cout << "**GitterDunePll :: duneNotifyNewGrid () " << endl, 1) : 1) ;
@@ -52,6 +51,11 @@
   return neu;
 }
 
+void GitterDunePll :: duneNotifyMacroGridChanges ()
+{
+  GitterPll :: notifyMacroGridChanges ();
+}
+
 void GitterDunePll :: duneNotifyGridChanges ()
 {
   Gitter :: notifyGridChanges () ;
Index: src/duneinterface/gitter_dune_pll_impl.h
===================================================================
--- src/duneinterface/gitter_dune_pll_impl.h	(revision 1176)
+++ src/duneinterface/gitter_dune_pll_impl.h	(revision 1181)
@@ -77,6 +77,9 @@
   void duneRepartitionMacroGrid (LoadBalancer :: DataBase &, GatherScatterType & gs) ;
   void repartitionMacroGrid (LoadBalancer :: DataBase &) ;
  
+  // notifyMacroGridChanges for dune
+  void duneNotifyMacroGridChanges (); 
+  
   // notifyGridChanges for dune
   void duneNotifyGridChanges (); 
   
Index: misc/checkversion.sh
===================================================================
--- misc/checkversion.sh	(revision 1176)
+++ misc/checkversion.sh	(revision 1181)
@@ -5,11 +5,11 @@
 
 ALUGRID_VERSION=`pkg-config --modversion alugrid`
 echo "Testing Version $ALUGRID_VERSION"
-if pkg-config --atleast-version=1.14 alugrid ; then 
-echo "Version ok" 
+if pkg-config --atleast-version=1.22 alugrid ; then 
+  echo "Version ok" 
 else 
-echo "Version no ok"
+  echo "Version not ok"
 fi 
 
 PKG_CONFIG_PATH=$REM_PKG_CONFIG_PATH
-echo $PKG_CONFIG_PATH
+#echo $PKG_CONFIG_PATH
Index: configure.ac
===================================================================
--- configure.ac	(revision 1176)
+++ configure.ac	(revision 1181)
@@ -2,8 +2,8 @@
 AC_PREREQ(2.50)
 
 # current version of ALUGrid
-AC_INIT(ALUGrid, 1.20, alugrid@mathematik.uni-freiburg.de)
-AM_INIT_AUTOMAKE(ALUGrid, 1.20, alugrid@mathematik.uni-freiburg.de)
+AC_INIT(ALUGrid, 1.22, alugrid@mathematik.uni-freiburg.de)
+AM_INIT_AUTOMAKE(ALUGrid, 1.22, alugrid@mathematik.uni-freiburg.de)
 
 # default install path is current directory 
 AC_PREFIX_DEFAULT([`pwd`])
