# Makefile.in generated by automake 1.11.6 from Makefile.am.
# dune/common/test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- tab-width: 4; indent-tabs-mode: nil -*-
# $Id$

# -*- Makefile -*-
# $Id$

#
# this file should be included into any Makefile.am so that we can
# easily introduce new global rules. DO NOT OVERUSE!
#

# -*- Makefile -*-
# $Id$

# -*- Makefile -*-
# $Id: sourcescheck 5183 2008-04-27 17:37:08Z christi $

# -*- Makefile -*-
# $Id$

#
# check-log
#
# This file implements the build-rules needed by the automated tests.
# "make check-log" will build the whole package and run all tests. For
# each test a log file under $(topsrc_dir)/check-log is created which
# contains the name of the test and what kind of test it was (build,
# lib, run, ...). If a test fails this is logged, but all other tests
# are still run.
#
# make OPTIONS:
# LOG_TIMING - specific command to measure the time needed for each test
#              example: "make LOG_TIMING='time -p' check-log"
#
# IMPLEMENTATION: check-log depends on different targets for different
# kinds of tests. These can run idividually by calling check-log-XXX.
# Possible variants are (in order of dependence)
#   - libs    (build all libraries)
#   - build   (build all applications and tests)
#   - test    (run each test from $(TESTS))
#   - sources (run sourcescheck in each directory)
#   - headers (run headercheck for each header)
#   - dir     (create dir entries for database, no actual tests are run)
#

# -*- Makefile -*-
# $Id: global-rules 5267 2008-09-10 10:45:42Z christi $


am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/dune-common
pkgincludedir = $(includedir)/dune-common
pkglibdir = $(libdir)/dune-common
pkglibexecdir = $(libexecdir)/dune-common
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
EXTRA_PROGRAMS = $(am__EXEEXT_1) sllisttest$(EXEEXT)
TESTS = $(am__EXEEXT_2) $(COMPILE_XFAIL)
XFAIL_TESTS = testdebugallocator_fail1$(EXEEXT) \
	testdebugallocator_fail2$(EXEEXT) \
	testdebugallocator_fail3$(EXEEXT) \
	testdebugallocator_fail4$(EXEEXT) \
	testdebugallocator_fail5$(EXEEXT) testfassign_fail1$(EXEEXT) \
	testfassign_fail2$(EXEEXT) testfassign_fail3$(EXEEXT) \
	testfassign_fail4$(EXEEXT) testfassign_fail5$(EXEEXT) \
	testfassign_fail6$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_2)
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(testinclude_HEADERS) \
	$(top_srcdir)/am/checklog $(top_srcdir)/am/documentation \
	$(top_srcdir)/am/global-rules $(top_srcdir)/am/headercheck \
	$(top_srcdir)/am/sourcescheck
subdir = dune/common/test
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/dependencies.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = check_fvector_size_fail1$(EXEEXT) \
	check_fvector_size_fail2$(EXEEXT) \
	genericiterator_compile_fail$(EXEEXT) \
	nullptr-test-fail$(EXEEXT) static_assert_test_fail$(EXEEXT) \
	testfconstruct_fail1$(EXEEXT) testfconstruct_fail2$(EXEEXT)
am__EXEEXT_2 = arraylisttest$(EXEEXT) arraytest$(EXEEXT) \
	bigunsignedinttest$(EXEEXT) bitsetvectortest$(EXEEXT) \
	check_fvector_size$(EXEEXT) conversiontest$(EXEEXT) \
	diagonalmatrixtest$(EXEEXT) dynmatrixtest$(EXEEXT) \
	dynvectortest$(EXEEXT) eigenvaluestest$(EXEEXT) \
	enumsettest$(EXEEXT) fassigntest$(EXEEXT) fmatrixtest$(EXEEXT) \
	fvectortest$(EXEEXT) gcdlcmtest$(EXEEXT) \
	iteratorfacadetest$(EXEEXT) iteratorfacadetest2$(EXEEXT) \
	lrutest$(EXEEXT) mpicollectivecommunication$(EXEEXT) \
	mpiguardtest$(EXEEXT) mpihelpertest$(EXEEXT) \
	mpihelpertest2$(EXEEXT) nullptr-test$(EXEEXT) \
	pathtest$(EXEEXT) parametertreetest$(EXEEXT) \
	poolallocatortest$(EXEEXT) shared_ptrtest_config$(EXEEXT) \
	shared_ptrtest_dune$(EXEEXT) singletontest$(EXEEXT) \
	static_assert_test$(EXEEXT) streamtest$(EXEEXT) \
	testdebugallocator$(EXEEXT) testdebugallocator_fail1$(EXEEXT) \
	testdebugallocator_fail2$(EXEEXT) \
	testdebugallocator_fail3$(EXEEXT) \
	testdebugallocator_fail4$(EXEEXT) \
	testdebugallocator_fail5$(EXEEXT) testfassign1$(EXEEXT) \
	testfassign2$(EXEEXT) testfassign3$(EXEEXT) \
	testfassign4$(EXEEXT) testfassign_fail1$(EXEEXT) \
	testfassign_fail2$(EXEEXT) testfassign_fail3$(EXEEXT) \
	testfassign_fail4$(EXEEXT) testfassign_fail5$(EXEEXT) \
	testfassign_fail6$(EXEEXT) testfconstruct$(EXEEXT) \
	testfloatcmp$(EXEEXT) tuplestest_dune$(EXEEXT) \
	tuplestest_std$(EXEEXT) tuplestest_tr1$(EXEEXT) \
	tupleutilitytest$(EXEEXT) typetraitstest$(EXEEXT) \
	utilitytest$(EXEEXT)
am_arraylisttest_OBJECTS = arraylisttest.$(OBJEXT)
arraylisttest_OBJECTS = $(am_arraylisttest_OBJECTS)
arraylisttest_LDADD = $(LDADD)
arraylisttest_DEPENDENCIES =
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am_arraytest_OBJECTS = arraytest.$(OBJEXT)
arraytest_OBJECTS = $(am_arraytest_OBJECTS)
arraytest_LDADD = $(LDADD)
arraytest_DEPENDENCIES =
am_bigunsignedinttest_OBJECTS =  \
	bigunsignedinttest-bigunsignedinttest.$(OBJEXT)
bigunsignedinttest_OBJECTS = $(am_bigunsignedinttest_OBJECTS)
bigunsignedinttest_LDADD = $(LDADD)
bigunsignedinttest_DEPENDENCIES =
am_bitsetvectortest_OBJECTS = bitsetvectortest.$(OBJEXT)
bitsetvectortest_OBJECTS = $(am_bitsetvectortest_OBJECTS)
bitsetvectortest_LDADD = $(LDADD)
bitsetvectortest_DEPENDENCIES =
am_check_fvector_size_OBJECTS = check_fvector_size.$(OBJEXT)
check_fvector_size_OBJECTS = $(am_check_fvector_size_OBJECTS)
check_fvector_size_LDADD = $(LDADD)
check_fvector_size_DEPENDENCIES =
am_check_fvector_size_fail1_OBJECTS =  \
	check_fvector_size_fail1-check_fvector_size_fail.$(OBJEXT)
check_fvector_size_fail1_OBJECTS =  \
	$(am_check_fvector_size_fail1_OBJECTS)
check_fvector_size_fail1_LDADD = $(LDADD)
check_fvector_size_fail1_DEPENDENCIES =
am_check_fvector_size_fail2_OBJECTS =  \
	check_fvector_size_fail2-check_fvector_size_fail.$(OBJEXT)
check_fvector_size_fail2_OBJECTS =  \
	$(am_check_fvector_size_fail2_OBJECTS)
check_fvector_size_fail2_LDADD = $(LDADD)
check_fvector_size_fail2_DEPENDENCIES =
am_conversiontest_OBJECTS = conversiontest.$(OBJEXT)
conversiontest_OBJECTS = $(am_conversiontest_OBJECTS)
conversiontest_LDADD = $(LDADD)
conversiontest_DEPENDENCIES =
am_diagonalmatrixtest_OBJECTS = diagonalmatrixtest.$(OBJEXT)
diagonalmatrixtest_OBJECTS = $(am_diagonalmatrixtest_OBJECTS)
diagonalmatrixtest_LDADD = $(LDADD)
diagonalmatrixtest_DEPENDENCIES =
am_dynmatrixtest_OBJECTS = dynmatrixtest.$(OBJEXT)
dynmatrixtest_OBJECTS = $(am_dynmatrixtest_OBJECTS)
dynmatrixtest_LDADD = $(LDADD)
dynmatrixtest_DEPENDENCIES =
am_dynvectortest_OBJECTS = dynvectortest.$(OBJEXT)
dynvectortest_OBJECTS = $(am_dynvectortest_OBJECTS)
dynvectortest_LDADD = $(LDADD)
dynvectortest_DEPENDENCIES =
am_eigenvaluestest_OBJECTS = eigenvaluestest.$(OBJEXT)
eigenvaluestest_OBJECTS = $(am_eigenvaluestest_OBJECTS)
am__DEPENDENCIES_1 =
eigenvaluestest_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_enumsettest_OBJECTS = enumsettest.$(OBJEXT)
enumsettest_OBJECTS = $(am_enumsettest_OBJECTS)
enumsettest_LDADD = $(LDADD)
enumsettest_DEPENDENCIES =
am_fassigntest_OBJECTS = fassigntest.$(OBJEXT)
fassigntest_OBJECTS = $(am_fassigntest_OBJECTS)
fassigntest_LDADD = $(LDADD)
fassigntest_DEPENDENCIES =
am_fmatrixtest_OBJECTS = fmatrixtest.$(OBJEXT)
fmatrixtest_OBJECTS = $(am_fmatrixtest_OBJECTS)
fmatrixtest_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_fvectortest_OBJECTS = fvectortest.$(OBJEXT)
fvectortest_OBJECTS = $(am_fvectortest_OBJECTS)
fvectortest_LDADD = $(LDADD)
fvectortest_DEPENDENCIES =
am_gcdlcmtest_OBJECTS = gcdlcmtest.$(OBJEXT)
gcdlcmtest_OBJECTS = $(am_gcdlcmtest_OBJECTS)
gcdlcmtest_LDADD = $(LDADD)
gcdlcmtest_DEPENDENCIES =
am_genericiterator_compile_fail_OBJECTS =  \
	genericiterator_compile_fail.$(OBJEXT)
genericiterator_compile_fail_OBJECTS =  \
	$(am_genericiterator_compile_fail_OBJECTS)
genericiterator_compile_fail_LDADD = $(LDADD)
genericiterator_compile_fail_DEPENDENCIES =
am_iteratorfacadetest_OBJECTS = iteratorfacadetest.$(OBJEXT)
iteratorfacadetest_OBJECTS = $(am_iteratorfacadetest_OBJECTS)
iteratorfacadetest_LDADD = $(LDADD)
iteratorfacadetest_DEPENDENCIES =
am_iteratorfacadetest2_OBJECTS = iteratorfacadetest2.$(OBJEXT)
iteratorfacadetest2_OBJECTS = $(am_iteratorfacadetest2_OBJECTS)
iteratorfacadetest2_LDADD = $(LDADD)
iteratorfacadetest2_DEPENDENCIES =
am_lrutest_OBJECTS = lrutest.$(OBJEXT)
lrutest_OBJECTS = $(am_lrutest_OBJECTS)
lrutest_LDADD = $(LDADD)
lrutest_DEPENDENCIES =
am_mpicollectivecommunication_OBJECTS = mpicollectivecommunication-mpicollectivecommunication.$(OBJEXT)
mpicollectivecommunication_OBJECTS =  \
	$(am_mpicollectivecommunication_OBJECTS)
mpicollectivecommunication_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
mpicollectivecommunication_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(mpicollectivecommunication_LDFLAGS) $(LDFLAGS) -o $@
am_mpiguardtest_OBJECTS = mpiguardtest-mpiguardtest.$(OBJEXT)
mpiguardtest_OBJECTS = $(am_mpiguardtest_OBJECTS)
mpiguardtest_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
mpiguardtest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(mpiguardtest_LDFLAGS) $(LDFLAGS) -o $@
am_mpihelpertest_OBJECTS = mpihelpertest-mpihelpertest.$(OBJEXT)
mpihelpertest_OBJECTS = $(am_mpihelpertest_OBJECTS)
mpihelpertest_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
mpihelpertest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(mpihelpertest_LDFLAGS) $(LDFLAGS) \
	-o $@
am_mpihelpertest2_OBJECTS = mpihelpertest2-mpihelpertest.$(OBJEXT)
mpihelpertest2_OBJECTS = $(am_mpihelpertest2_OBJECTS)
mpihelpertest2_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
mpihelpertest2_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(mpihelpertest2_LDFLAGS) \
	$(LDFLAGS) -o $@
am_nullptr_test_OBJECTS = nullptr-test.$(OBJEXT) \
	nullptr-test2.$(OBJEXT)
nullptr_test_OBJECTS = $(am_nullptr_test_OBJECTS)
nullptr_test_LDADD = $(LDADD)
nullptr_test_DEPENDENCIES =
am_nullptr_test_fail_OBJECTS =  \
	nullptr_test_fail-nullptr-test.$(OBJEXT)
nullptr_test_fail_OBJECTS = $(am_nullptr_test_fail_OBJECTS)
nullptr_test_fail_LDADD = $(LDADD)
nullptr_test_fail_DEPENDENCIES =
am_parametertreetest_OBJECTS = parametertreetest.$(OBJEXT)
parametertreetest_OBJECTS = $(am_parametertreetest_OBJECTS)
parametertreetest_LDADD = $(LDADD)
parametertreetest_DEPENDENCIES =
am_pathtest_OBJECTS = pathtest.$(OBJEXT)
pathtest_OBJECTS = $(am_pathtest_OBJECTS)
pathtest_LDADD = $(LDADD)
pathtest_DEPENDENCIES =
am_poolallocatortest_OBJECTS = poolallocatortest.$(OBJEXT)
poolallocatortest_OBJECTS = $(am_poolallocatortest_OBJECTS)
poolallocatortest_LDADD = $(LDADD)
poolallocatortest_DEPENDENCIES =
am_shared_ptrtest_config_OBJECTS = shared_ptrtest.$(OBJEXT)
shared_ptrtest_config_OBJECTS = $(am_shared_ptrtest_config_OBJECTS)
shared_ptrtest_config_LDADD = $(LDADD)
shared_ptrtest_config_DEPENDENCIES =
am_shared_ptrtest_dune_OBJECTS =  \
	shared_ptrtest_dune-shared_ptrtest.$(OBJEXT)
shared_ptrtest_dune_OBJECTS = $(am_shared_ptrtest_dune_OBJECTS)
shared_ptrtest_dune_LDADD = $(LDADD)
shared_ptrtest_dune_DEPENDENCIES =
am_singletontest_OBJECTS = singletontest.$(OBJEXT)
singletontest_OBJECTS = $(am_singletontest_OBJECTS)
singletontest_LDADD = $(LDADD)
singletontest_DEPENDENCIES =
am_sllisttest_OBJECTS = sllisttest.$(OBJEXT)
sllisttest_OBJECTS = $(am_sllisttest_OBJECTS)
sllisttest_LDADD = $(LDADD)
sllisttest_DEPENDENCIES =
am_static_assert_test_OBJECTS = static_assert_test.$(OBJEXT)
static_assert_test_OBJECTS = $(am_static_assert_test_OBJECTS)
static_assert_test_LDADD = $(LDADD)
static_assert_test_DEPENDENCIES =
am_static_assert_test_fail_OBJECTS =  \
	static_assert_test_fail.$(OBJEXT)
static_assert_test_fail_OBJECTS =  \
	$(am_static_assert_test_fail_OBJECTS)
static_assert_test_fail_LDADD = $(LDADD)
static_assert_test_fail_DEPENDENCIES =
am_streamtest_OBJECTS = streamtest.$(OBJEXT)
streamtest_OBJECTS = $(am_streamtest_OBJECTS)
streamtest_LDADD = $(LDADD)
streamtest_DEPENDENCIES =
am_testdebugallocator_OBJECTS =  \
	testdebugallocator-testdebugallocator.$(OBJEXT)
testdebugallocator_OBJECTS = $(am_testdebugallocator_OBJECTS)
testdebugallocator_LDADD = $(LDADD)
testdebugallocator_DEPENDENCIES =
am_testdebugallocator_fail1_OBJECTS =  \
	testdebugallocator_fail1-testdebugallocator.$(OBJEXT)
testdebugallocator_fail1_OBJECTS =  \
	$(am_testdebugallocator_fail1_OBJECTS)
testdebugallocator_fail1_LDADD = $(LDADD)
testdebugallocator_fail1_DEPENDENCIES =
am_testdebugallocator_fail2_OBJECTS =  \
	testdebugallocator_fail2-testdebugallocator.$(OBJEXT)
testdebugallocator_fail2_OBJECTS =  \
	$(am_testdebugallocator_fail2_OBJECTS)
testdebugallocator_fail2_LDADD = $(LDADD)
testdebugallocator_fail2_DEPENDENCIES =
am_testdebugallocator_fail3_OBJECTS =  \
	testdebugallocator_fail3-testdebugallocator.$(OBJEXT)
testdebugallocator_fail3_OBJECTS =  \
	$(am_testdebugallocator_fail3_OBJECTS)
testdebugallocator_fail3_LDADD = $(LDADD)
testdebugallocator_fail3_DEPENDENCIES =
am_testdebugallocator_fail4_OBJECTS =  \
	testdebugallocator_fail4-testdebugallocator.$(OBJEXT)
testdebugallocator_fail4_OBJECTS =  \
	$(am_testdebugallocator_fail4_OBJECTS)
testdebugallocator_fail4_LDADD = $(LDADD)
testdebugallocator_fail4_DEPENDENCIES =
am_testdebugallocator_fail5_OBJECTS =  \
	testdebugallocator_fail5-testdebugallocator.$(OBJEXT)
testdebugallocator_fail5_OBJECTS =  \
	$(am_testdebugallocator_fail5_OBJECTS)
testdebugallocator_fail5_LDADD = $(LDADD)
testdebugallocator_fail5_DEPENDENCIES =
am_testfassign1_OBJECTS = testfassign1-testfassign.$(OBJEXT) \
	testfassign1-testfassign2.$(OBJEXT)
testfassign1_OBJECTS = $(am_testfassign1_OBJECTS)
testfassign1_LDADD = $(LDADD)
testfassign1_DEPENDENCIES =
am_testfassign2_OBJECTS = testfassign2-testfassign.$(OBJEXT)
testfassign2_OBJECTS = $(am_testfassign2_OBJECTS)
testfassign2_LDADD = $(LDADD)
testfassign2_DEPENDENCIES =
am_testfassign3_OBJECTS = testfassign3-testfassign.$(OBJEXT)
testfassign3_OBJECTS = $(am_testfassign3_OBJECTS)
testfassign3_LDADD = $(LDADD)
testfassign3_DEPENDENCIES =
am_testfassign4_OBJECTS = testfassign4-testfassign.$(OBJEXT)
testfassign4_OBJECTS = $(am_testfassign4_OBJECTS)
testfassign4_LDADD = $(LDADD)
testfassign4_DEPENDENCIES =
am_testfassign_fail1_OBJECTS =  \
	testfassign_fail1-testfassign.$(OBJEXT)
testfassign_fail1_OBJECTS = $(am_testfassign_fail1_OBJECTS)
testfassign_fail1_LDADD = $(LDADD)
testfassign_fail1_DEPENDENCIES =
am_testfassign_fail2_OBJECTS =  \
	testfassign_fail2-testfassign.$(OBJEXT)
testfassign_fail2_OBJECTS = $(am_testfassign_fail2_OBJECTS)
testfassign_fail2_LDADD = $(LDADD)
testfassign_fail2_DEPENDENCIES =
am_testfassign_fail3_OBJECTS =  \
	testfassign_fail3-testfassign.$(OBJEXT)
testfassign_fail3_OBJECTS = $(am_testfassign_fail3_OBJECTS)
testfassign_fail3_LDADD = $(LDADD)
testfassign_fail3_DEPENDENCIES =
am_testfassign_fail4_OBJECTS =  \
	testfassign_fail4-testfassign.$(OBJEXT)
testfassign_fail4_OBJECTS = $(am_testfassign_fail4_OBJECTS)
testfassign_fail4_LDADD = $(LDADD)
testfassign_fail4_DEPENDENCIES =
am_testfassign_fail5_OBJECTS =  \
	testfassign_fail5-testfassign.$(OBJEXT)
testfassign_fail5_OBJECTS = $(am_testfassign_fail5_OBJECTS)
testfassign_fail5_LDADD = $(LDADD)
testfassign_fail5_DEPENDENCIES =
am_testfassign_fail6_OBJECTS =  \
	testfassign_fail6-testfassign.$(OBJEXT)
testfassign_fail6_OBJECTS = $(am_testfassign_fail6_OBJECTS)
testfassign_fail6_LDADD = $(LDADD)
testfassign_fail6_DEPENDENCIES =
am_testfconstruct_OBJECTS = testfconstruct-testfconstruct.$(OBJEXT)
testfconstruct_OBJECTS = $(am_testfconstruct_OBJECTS)
testfconstruct_LDADD = $(LDADD)
testfconstruct_DEPENDENCIES =
am_testfconstruct_fail1_OBJECTS =  \
	testfconstruct_fail1-testfconstruct.$(OBJEXT)
testfconstruct_fail1_OBJECTS = $(am_testfconstruct_fail1_OBJECTS)
testfconstruct_fail1_LDADD = $(LDADD)
testfconstruct_fail1_DEPENDENCIES =
am_testfconstruct_fail2_OBJECTS =  \
	testfconstruct_fail2-testfconstruct.$(OBJEXT)
testfconstruct_fail2_OBJECTS = $(am_testfconstruct_fail2_OBJECTS)
testfconstruct_fail2_LDADD = $(LDADD)
testfconstruct_fail2_DEPENDENCIES =
am_testfloatcmp_OBJECTS = testfloatcmp.$(OBJEXT)
testfloatcmp_OBJECTS = $(am_testfloatcmp_OBJECTS)
testfloatcmp_LDADD = $(LDADD)
testfloatcmp_DEPENDENCIES =
am_tuplestest_dune_OBJECTS = tuplestest_dune-tuplestest.$(OBJEXT)
tuplestest_dune_OBJECTS = $(am_tuplestest_dune_OBJECTS)
tuplestest_dune_LDADD = $(LDADD)
tuplestest_dune_DEPENDENCIES =
am_tuplestest_std_OBJECTS = tuplestest.$(OBJEXT)
tuplestest_std_OBJECTS = $(am_tuplestest_std_OBJECTS)
tuplestest_std_LDADD = $(LDADD)
tuplestest_std_DEPENDENCIES =
am_tuplestest_tr1_OBJECTS = tuplestest_tr1-tuplestest.$(OBJEXT)
tuplestest_tr1_OBJECTS = $(am_tuplestest_tr1_OBJECTS)
tuplestest_tr1_LDADD = $(LDADD)
tuplestest_tr1_DEPENDENCIES =
am_tupleutilitytest_OBJECTS = tupleutilitytest.$(OBJEXT)
tupleutilitytest_OBJECTS = $(am_tupleutilitytest_OBJECTS)
tupleutilitytest_LDADD = $(LDADD)
tupleutilitytest_DEPENDENCIES =
am_typetraitstest_OBJECTS = typetraitstest.$(OBJEXT)
typetraitstest_OBJECTS = $(am_typetraitstest_OBJECTS)
typetraitstest_LDADD = $(LDADD)
typetraitstest_DEPENDENCIES =
am_utilitytest_OBJECTS = utilitytest.$(OBJEXT)
utilitytest_OBJECTS = $(am_utilitytest_OBJECTS)
utilitytest_LDADD = $(LDADD)
utilitytest_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(arraylisttest_SOURCES) $(arraytest_SOURCES) \
	$(bigunsignedinttest_SOURCES) $(bitsetvectortest_SOURCES) \
	$(check_fvector_size_SOURCES) \
	$(check_fvector_size_fail1_SOURCES) \
	$(check_fvector_size_fail2_SOURCES) $(conversiontest_SOURCES) \
	$(diagonalmatrixtest_SOURCES) $(dynmatrixtest_SOURCES) \
	$(dynvectortest_SOURCES) $(eigenvaluestest_SOURCES) \
	$(enumsettest_SOURCES) $(fassigntest_SOURCES) \
	$(fmatrixtest_SOURCES) $(fvectortest_SOURCES) \
	$(gcdlcmtest_SOURCES) $(genericiterator_compile_fail_SOURCES) \
	$(iteratorfacadetest_SOURCES) $(iteratorfacadetest2_SOURCES) \
	$(lrutest_SOURCES) $(mpicollectivecommunication_SOURCES) \
	$(mpiguardtest_SOURCES) $(mpihelpertest_SOURCES) \
	$(mpihelpertest2_SOURCES) $(nullptr_test_SOURCES) \
	$(nullptr_test_fail_SOURCES) $(parametertreetest_SOURCES) \
	$(pathtest_SOURCES) $(poolallocatortest_SOURCES) \
	$(shared_ptrtest_config_SOURCES) \
	$(shared_ptrtest_dune_SOURCES) $(singletontest_SOURCES) \
	$(sllisttest_SOURCES) $(static_assert_test_SOURCES) \
	$(static_assert_test_fail_SOURCES) $(streamtest_SOURCES) \
	$(testdebugallocator_SOURCES) \
	$(testdebugallocator_fail1_SOURCES) \
	$(testdebugallocator_fail2_SOURCES) \
	$(testdebugallocator_fail3_SOURCES) \
	$(testdebugallocator_fail4_SOURCES) \
	$(testdebugallocator_fail5_SOURCES) $(testfassign1_SOURCES) \
	$(testfassign2_SOURCES) $(testfassign3_SOURCES) \
	$(testfassign4_SOURCES) $(testfassign_fail1_SOURCES) \
	$(testfassign_fail2_SOURCES) $(testfassign_fail3_SOURCES) \
	$(testfassign_fail4_SOURCES) $(testfassign_fail5_SOURCES) \
	$(testfassign_fail6_SOURCES) $(testfconstruct_SOURCES) \
	$(testfconstruct_fail1_SOURCES) \
	$(testfconstruct_fail2_SOURCES) $(testfloatcmp_SOURCES) \
	$(tuplestest_dune_SOURCES) $(tuplestest_std_SOURCES) \
	$(tuplestest_tr1_SOURCES) $(tupleutilitytest_SOURCES) \
	$(typetraitstest_SOURCES) $(utilitytest_SOURCES)
DIST_SOURCES = $(arraylisttest_SOURCES) $(arraytest_SOURCES) \
	$(bigunsignedinttest_SOURCES) $(bitsetvectortest_SOURCES) \
	$(check_fvector_size_SOURCES) \
	$(check_fvector_size_fail1_SOURCES) \
	$(check_fvector_size_fail2_SOURCES) $(conversiontest_SOURCES) \
	$(diagonalmatrixtest_SOURCES) $(dynmatrixtest_SOURCES) \
	$(dynvectortest_SOURCES) $(eigenvaluestest_SOURCES) \
	$(enumsettest_SOURCES) $(fassigntest_SOURCES) \
	$(fmatrixtest_SOURCES) $(fvectortest_SOURCES) \
	$(gcdlcmtest_SOURCES) $(genericiterator_compile_fail_SOURCES) \
	$(iteratorfacadetest_SOURCES) $(iteratorfacadetest2_SOURCES) \
	$(lrutest_SOURCES) $(mpicollectivecommunication_SOURCES) \
	$(mpiguardtest_SOURCES) $(mpihelpertest_SOURCES) \
	$(mpihelpertest2_SOURCES) $(nullptr_test_SOURCES) \
	$(nullptr_test_fail_SOURCES) $(parametertreetest_SOURCES) \
	$(pathtest_SOURCES) $(poolallocatortest_SOURCES) \
	$(shared_ptrtest_config_SOURCES) \
	$(shared_ptrtest_dune_SOURCES) $(singletontest_SOURCES) \
	$(sllisttest_SOURCES) $(static_assert_test_SOURCES) \
	$(static_assert_test_fail_SOURCES) $(streamtest_SOURCES) \
	$(testdebugallocator_SOURCES) \
	$(testdebugallocator_fail1_SOURCES) \
	$(testdebugallocator_fail2_SOURCES) \
	$(testdebugallocator_fail3_SOURCES) \
	$(testdebugallocator_fail4_SOURCES) \
	$(testdebugallocator_fail5_SOURCES) $(testfassign1_SOURCES) \
	$(testfassign2_SOURCES) $(testfassign3_SOURCES) \
	$(testfassign4_SOURCES) $(testfassign_fail1_SOURCES) \
	$(testfassign_fail2_SOURCES) $(testfassign_fail3_SOURCES) \
	$(testfassign_fail4_SOURCES) $(testfassign_fail5_SOURCES) \
	$(testfassign_fail6_SOURCES) $(testfconstruct_SOURCES) \
	$(testfconstruct_fail1_SOURCES) \
	$(testfconstruct_fail2_SOURCES) $(testfloatcmp_SOURCES) \
	$(tuplestest_dune_SOURCES) $(tuplestest_std_SOURCES) \
	$(tuplestest_tr1_SOURCES) $(tupleutilitytest_SOURCES) \
	$(typetraitstest_SOURCES) $(utilitytest_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(testincludedir)"
HEADERS = $(noinst_HEADERS) $(testinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/masdoc/Documents/c2/C2/dune-common-2.3/missing --run aclocal-1.11
ACLOCAL_AMFLAGS = -I . -I m4
ALL_PKG_CPPFLAGS =   ${DUNEMPICPPFLAGS}
ALL_PKG_LDFLAGS =   ${DUNEMPILDFLAGS}
ALL_PKG_LIBS = ${DUNEMPILIBS}  -lm 
AMTAR = $${TAR-tar}
AM_CPPFLAGS = -I$(top_srcdir)
AM_DEFAULT_VERBOSITY = 1
AM_LDFLAGS = $(DUNE_LDFLAGS)
AR = ar
AUTOCONF = ${SHELL} /home/masdoc/Documents/c2/C2/dune-common-2.3/missing --run autoconf
AUTOHEADER = ${SHELL} /home/masdoc/Documents/c2/C2/dune-common-2.3/missing --run autoheader
AUTOMAKE = ${SHELL} /home/masdoc/Documents/c2/C2/dune-common-2.3/missing --run automake-1.11
AWK = gawk
BIBTEX = bibtex
BLAS_LIBS = 
BOOST_CPPFLAGS = -I/include/boost-0
BOOST_LDFLAGS = -L/lib64
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CONVERT = convert
CPP = gcc -E
CPPFLAGS = 
CXX = g++ -std=c++11
CXXCPP = g++ -E -std=c++11
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O1 -funroll-loops -finline-functions -Wall -Wfatal-errors
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOT = dot
DOXYGEN = doxygen
DSYMUTIL = 
DUMPBIN = 
DUNEMPICPPFLAGS = 
DUNEMPILDFLAGS = 
DUNEMPILIBS = 
DUNEWEBDIR = no
DUNE_COMMON_BIN = $(abs_top_srcdir)/bin/
DUNE_COMMON_ROOT = $(abs_top_srcdir)
DUNE_COMMON_VERSION = 2.3
DUNE_COMMON_VERSION_MAJOR = 2
DUNE_COMMON_VERSION_MINOR = 3
DUNE_COMMON_VERSION_REVISION = 0
DUNE_CPPFLAGS = 
DUNE_LDFLAGS = 
DUNE_LIBS = 
DUNE_MAINTAINER_NAME = dune-devel@dune-project.org
DUNE_MOD_NAME = dune-common
DUNE_MOD_VERSION = 2.3
DVIPDF = dvipdf
DVIPS = dvips
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_PARALLEL = 
EXEEXT = 
F77 = f77
FC = gfortran
FCFLAGS = -g -O2
FCLIBS =  -L/usr/lib/gcc/x86_64-linux-gnu/5 -L/usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/5/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/5/../../.. -lgfortran -lm -lquadmath
FFLAGS = -g -O2
FGREP = /bin/grep -F
FLIBS =  -L/usr/lib/gcc/x86_64-linux-gnu/5 -L/usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/5/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/5/../../.. -lgfortran -lm -lquadmath
GMP_CPPFLAGS = 
GMP_LIBS = 
GREP = /bin/grep
INKSCAPE = inkscape
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LAPACK_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDADD = $(top_builddir)/lib/libdunecommon.la
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/masdoc/Documents/c2/C2/dune-common-2.3/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MPICC = 
MPILIBS = 
MPI_VERSION = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = dune-common
PACKAGE_BUGREPORT = dune-devel@dune-project.org
PACKAGE_NAME = dune-common
PACKAGE_STRING = dune-common 2.3
PACKAGE_TARNAME = dune-common
PACKAGE_URL = 
PACKAGE_VERSION = 2.3
PATH_SEPARATOR = :
PERL = perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
REQUIRES = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TEX = latex
VERSION = 2.3
WML = wml
abs_builddir = /home/masdoc/Documents/c2/C2/dune-common-2.3/dune/common/test
abs_srcdir = /home/masdoc/Documents/c2/C2/dune-common-2.3/dune/common/test
abs_top_builddir = /home/masdoc/Documents/c2/C2/dune-common-2.3
abs_top_srcdir = /home/masdoc/Documents/c2/C2/dune-common-2.3
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_F77 = f77
ac_ct_FC = gfortran
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
am_dir = /am
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
hostid = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/masdoc/Documents/c2/C2/dune-common-2.3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/masdoc/Documents/c2/C2
program_transform_name = s,x,x,
psdir = ${docdir}
revision = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
tag = 
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
TESTPROGS = \
    arraylisttest \
    arraytest \
    bigunsignedinttest \
    bitsetvectortest \
    check_fvector_size \
    conversiontest \
    diagonalmatrixtest \
    dynmatrixtest \
    dynvectortest \
    eigenvaluestest \
    enumsettest \
    fassigntest \
    fmatrixtest \
    fvectortest \
    gcdlcmtest \
    iteratorfacadetest \
    iteratorfacadetest2 \
    lrutest \
    mpicollectivecommunication \
    mpiguardtest \
    mpihelpertest \
    mpihelpertest2 \
    nullptr-test \
    pathtest \
    parametertreetest \
    poolallocatortest \
    shared_ptrtest_config \
    shared_ptrtest_dune \
    singletontest \
    static_assert_test \
    streamtest \
    testdebugallocator \
    testdebugallocator_fail1 \
    testdebugallocator_fail2 \
    testdebugallocator_fail3 \
    testdebugallocator_fail4 \
    testdebugallocator_fail5 \
    testfassign1 \
    testfassign2 \
    testfassign3 \
    testfassign4 \
    testfassign_fail1 \
    testfassign_fail2 \
    testfassign_fail3 \
    testfassign_fail4 \
    testfassign_fail5 \
    testfassign_fail6 \
    testfconstruct \
    testfloatcmp \
    tuplestest_dune \
    tuplestest_std \
    tuplestest_tr1 \
    tupleutilitytest \
    typetraitstest \
    utilitytest


# which tests to run
COMPILE_XFAIL = $(DUNE_COMMON_BIN)/xfail-compile-tests
COMPILE_XFAIL_TESTS = \
    check_fvector_size_fail1 \
    check_fvector_size_fail2 \
    genericiterator_compile_fail \
    nullptr-test-fail \
    static_assert_test_fail \
    testfconstruct_fail1 \
    testfconstruct_fail2

noinst_HEADERS = dummyiterator.hh iteratorfacadetest.hh

# Install some test headers, because they get used by tests in other modules
testincludedir = $(includedir)/dune/common/test
testinclude_HEADERS = checkmatrixinterface.hh iteratortest.hh

# define the programs (in alphabetical order)
arraylisttest_SOURCES = arraylisttest.cc
arraytest_SOURCES = arraytest.cc
bigunsignedinttest_SOURCES = bigunsignedinttest.cc
bigunsignedinttest_CPPFLAGS = $(AM_CPPFLAGS) $(BOOST_CPPFLAGS)
bitsetvectortest_SOURCES = bitsetvectortest.cc
check_fvector_size_fail1_SOURCES = check_fvector_size_fail.cc
check_fvector_size_fail1_CPPFLAGS = $(AM_CPPFLAGS) -DDIM=1
check_fvector_size_fail2_SOURCES = check_fvector_size_fail.cc
check_fvector_size_fail2_CPPFLAGS = $(AM_CPPFLAGS) -DDIM=3
check_fvector_size_SOURCES = check_fvector_size.cc
conversiontest_SOURCES = conversiontest.cc
diagonalmatrixtest_SOURCES = diagonalmatrixtest.cc
dynmatrixtest_SOURCES = dynmatrixtest.cc
dynvectortest_SOURCES = dynvectortest.cc
eigenvaluestest_SOURCES = eigenvaluestest.cc
eigenvaluestest_LDADD = $(LAPACK_LIBS) $(LDADD) $(BLAS_LIBS) $(LIBS) $(FLIBS)
enumsettest_SOURCES = enumsettest.cc
fassigntest_SOURCES = fassigntest.cc
fmatrixtest_SOURCES = fmatrixtest.cc
fmatrixtest_LDADD = $(LAPACK_LIBS) $(LDADD) $(BLAS_LIBS) $(LIBS) $(FLIBS)
fvectortest_SOURCES = fvectortest.cc
gcdlcmtest_SOURCES = gcdlcmtest.cc
genericiterator_compile_fail_SOURCES = genericiterator_compile_fail.cc

# mention headers so that they are distributed too
iteratorfacadetest_SOURCES = iteratorfacadetest.cc iteratorfacadetest.hh \
   iteratortest.hh

iteratorfacadetest2_SOURCES = iteratorfacadetest2.cc
lrutest_SOURCES = lrutest.cc
mpicollectivecommunication_SOURCES = mpicollectivecommunication.cc
mpicollectivecommunication_CPPFLAGS = $(AM_CPPFLAGS) $(DUNEMPICPPFLAGS)
mpicollectivecommunication_LDADD = $(DUNEMPILIBS) $(LDADD)
mpicollectivecommunication_LDFLAGS = $(AM_LDFLAGS) $(DUNEMPILDFLAGS)
mpiguardtest_SOURCES = mpiguardtest.cc
mpiguardtest_CPPFLAGS = $(AM_CPPFLAGS) $(DUNEMPICPPFLAGS)
mpiguardtest_LDADD = $(DUNEMPILIBS) $(LDADD)
mpiguardtest_LDFLAGS = $(AM_LDFLAGS) $(DUNEMPILDFLAGS)
mpihelpertest_SOURCES = mpihelpertest.cc
mpihelpertest_CPPFLAGS = $(AM_CPPFLAGS) $(DUNEMPICPPFLAGS)
mpihelpertest_LDADD = $(DUNEMPILIBS) $(LDADD)
mpihelpertest_LDFLAGS = $(AM_LDFLAGS) $(DUNEMPILDFLAGS)
mpihelpertest2_SOURCES = mpihelpertest.cc
mpihelpertest2_CPPFLAGS = $(AM_CPPFLAGS) $(DUNEMPICPPFLAGS) -DMPIHELPER_PREINITIALIZE
mpihelpertest2_LDADD = $(DUNEMPILIBS) $(LDADD)
mpihelpertest2_LDFLAGS = $(AM_LDFLAGS) $(DUNEMPILDFLAGS)
nullptr_test_SOURCES = nullptr-test.cc nullptr-test2.cc
nullptr_test_fail_SOURCES = nullptr-test.cc
nullptr_test_fail_CPPFLAGS = $(AM_CPPFLAGS) -DFAIL
parametertreetest_SOURCES = parametertreetest.cc
pathtest_SOURCES = pathtest.cc
poolallocatortest_SOURCES = poolallocatortest.cc
shared_ptrtest_config_SOURCES = shared_ptrtest.cc
shared_ptrtest_dune_SOURCES = shared_ptrtest.cc
shared_ptrtest_dune_CPPFLAGS = $(AM_CPPFLAGS)   \
    -DDISABLE_CONFIGURED_SHARED_PTR

singletontest_SOURCES = singletontest.cc
sllisttest_SOURCES = sllisttest.cc
sourcescheck_NOSOURCES = timing.cc
static_assert_test_SOURCES = static_assert_test.cc
static_assert_test_fail_SOURCES = static_assert_test_fail.cc
streamtest_SOURCES = streamtest.cc
testdebugallocator_SOURCES = testdebugallocator.cc
testdebugallocator_CPPFLAGS = $(AM_CPPFLAGS)
testdebugallocator_fail1_SOURCES = testdebugallocator.cc
testdebugallocator_fail1_CPPFLAGS = $(AM_CPPFLAGS) -DFAILURE1
testdebugallocator_fail2_SOURCES = testdebugallocator.cc
testdebugallocator_fail2_CPPFLAGS = $(AM_CPPFLAGS) -DFAILURE2
testdebugallocator_fail3_SOURCES = testdebugallocator.cc
testdebugallocator_fail3_CPPFLAGS = $(AM_CPPFLAGS) -DFAILURE3
testdebugallocator_fail4_SOURCES = testdebugallocator.cc
testdebugallocator_fail4_CPPFLAGS = $(AM_CPPFLAGS) -DFAILURE4 -DDEBUG_ALLOCATOR_KEEP=1
testdebugallocator_fail5_SOURCES = testdebugallocator.cc
testdebugallocator_fail5_CPPFLAGS = $(AM_CPPFLAGS) -DFAILURE5
testfassign1_SOURCES = testfassign.cc testfassign2.cc
testfassign1_CPPFLAGS = $(AM_CPPFLAGS) -D_DUNE_TEST_N=3 -D_VALUES="1,2,3"
testfassign2_SOURCES = testfassign.cc
testfassign2_CPPFLAGS = $(AM_CPPFLAGS) -D_DUNE_TEST_N=3 -D_VALUES="1,zero"
testfassign3_SOURCES = testfassign.cc
testfassign3_CPPFLAGS = $(AM_CPPFLAGS) -D_DUNE_TEST_N=3 -D_VALUES="zero"
testfassign4_SOURCES = testfassign.cc
testfassign4_CPPFLAGS = $(AM_CPPFLAGS) -D_DUNE_TEST_N=2 -D_DUNE_TEST_M=3 -D_VALUES="1,zero,nextRow,2,3,4"
testfassign_fail1_SOURCES = testfassign.cc
testfassign_fail1_CPPFLAGS = $(AM_CPPFLAGS) -D_DUNE_TEST_N=3 -D_VALUES="1,2"
testfassign_fail2_SOURCES = testfassign.cc
testfassign_fail2_CPPFLAGS = $(AM_CPPFLAGS) -D_DUNE_TEST_N=3 -D_VALUES="1,2,3,4"
testfassign_fail3_SOURCES = testfassign.cc
testfassign_fail3_CPPFLAGS = $(AM_CPPFLAGS) -D_DUNE_TEST_N=2 -D_DUNE_TEST_M=2 -D_VALUES="1,nextRow,2,3"
testfassign_fail4_SOURCES = testfassign.cc
testfassign_fail4_CPPFLAGS = $(AM_CPPFLAGS) -D_DUNE_TEST_N=2 -D_DUNE_TEST_M=2 -D_VALUES="1,2,3,nextRow,2,3"
testfassign_fail5_SOURCES = testfassign.cc
testfassign_fail5_CPPFLAGS = $(AM_CPPFLAGS) -D_DUNE_TEST_N=2 -D_DUNE_TEST_M=2 -D_VALUES="1,2"
testfassign_fail6_SOURCES = testfassign.cc
testfassign_fail6_CPPFLAGS = $(AM_CPPFLAGS) -D_DUNE_TEST_N=2 -D_DUNE_TEST_M=2 -D_VALUES="1,2,nextRow,2,3,nextRow,4,5"
testfconstruct_SOURCES = testfconstruct.cc
testfconstruct_CPPFLAGS = $(AM_CPPFLAGS) -DFVSIZE=3
testfconstruct_fail1_SOURCES = testfconstruct.cc
testfconstruct_fail1_CPPFLAGS = $(AM_CPPFLAGS) -DFVSIZE=2
testfconstruct_fail2_SOURCES = testfconstruct.cc
testfconstruct_fail2_CPPFLAGS = $(AM_CPPFLAGS) -DFVSIZE=5
testfloatcmp_SOURCES = testfloatcmp.cc
tuplestest_dune_SOURCES = tuplestest.cc
tuplestest_dune_CPPFLAGS = $(AM_CPPFLAGS)       \
    -DDISABLE_TR1_TUPLE -DDISABLE_STD_TUPLE

tuplestest_std_SOURCES = tuplestest.cc
tuplestest_tr1_SOURCES = tuplestest.cc
tuplestest_tr1_CPPFLAGS = $(AM_CPPFLAGS)        \
    -DDISABLE_STD_TUPLE

tupleutilitytest_SOURCES = tupleutilitytest.cc
typetraitstest_SOURCES = typetraitstest.cc
utilitytest_SOURCES = utilitytest.cc
sourcescheck_IGNORE = aclocal.m4 dependencies.m4
sourcescheck_LIST = $(SOURCES) $(DIST_SOURCES) $(HEADERS) $(DIST_HEADERS) \
	$(sourcescheck_NOSOURCES) $(dist_noinst_DATA) $(EXTRA_DIST)

headercheck_PATTERN = *.hh
LOG_FILE = $(top_srcdir)/check-log.log
LOG_DIR = $(top_srcdir)/check-log
LOG_STORE = $(SHELL) $(DUNE_COMMON_ROOT)/bin/check-log-store $(LOG_FILE) $(LOG_DIR)
LOG_TIMING = 
LOG_SET_OPTIONS = \
	path=`test "$(subdir)" = "." && \
	echo "/dune-common" || echo "/dune-common/$(subdir)"`; \
	ppath=`dirname $$path`; \
	dir=`basename $$path`

EXTRA_DIST = CMakeLists.txt dummy.f
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/am/global-rules $(top_srcdir)/am/sourcescheck $(top_srcdir)/am/headercheck $(top_srcdir)/am/checklog $(top_srcdir)/am/documentation $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign dune/common/test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign dune/common/test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/am/global-rules $(top_srcdir)/am/sourcescheck $(top_srcdir)/am/headercheck $(top_srcdir)/am/checklog $(top_srcdir)/am/documentation:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
arraylisttest$(EXEEXT): $(arraylisttest_OBJECTS) $(arraylisttest_DEPENDENCIES) $(EXTRA_arraylisttest_DEPENDENCIES) 
	@rm -f arraylisttest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(arraylisttest_OBJECTS) $(arraylisttest_LDADD) $(LIBS)
arraytest$(EXEEXT): $(arraytest_OBJECTS) $(arraytest_DEPENDENCIES) $(EXTRA_arraytest_DEPENDENCIES) 
	@rm -f arraytest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(arraytest_OBJECTS) $(arraytest_LDADD) $(LIBS)
bigunsignedinttest$(EXEEXT): $(bigunsignedinttest_OBJECTS) $(bigunsignedinttest_DEPENDENCIES) $(EXTRA_bigunsignedinttest_DEPENDENCIES) 
	@rm -f bigunsignedinttest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bigunsignedinttest_OBJECTS) $(bigunsignedinttest_LDADD) $(LIBS)
bitsetvectortest$(EXEEXT): $(bitsetvectortest_OBJECTS) $(bitsetvectortest_DEPENDENCIES) $(EXTRA_bitsetvectortest_DEPENDENCIES) 
	@rm -f bitsetvectortest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bitsetvectortest_OBJECTS) $(bitsetvectortest_LDADD) $(LIBS)
check_fvector_size$(EXEEXT): $(check_fvector_size_OBJECTS) $(check_fvector_size_DEPENDENCIES) $(EXTRA_check_fvector_size_DEPENDENCIES) 
	@rm -f check_fvector_size$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(check_fvector_size_OBJECTS) $(check_fvector_size_LDADD) $(LIBS)
check_fvector_size_fail1$(EXEEXT): $(check_fvector_size_fail1_OBJECTS) $(check_fvector_size_fail1_DEPENDENCIES) $(EXTRA_check_fvector_size_fail1_DEPENDENCIES) 
	@rm -f check_fvector_size_fail1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(check_fvector_size_fail1_OBJECTS) $(check_fvector_size_fail1_LDADD) $(LIBS)
check_fvector_size_fail2$(EXEEXT): $(check_fvector_size_fail2_OBJECTS) $(check_fvector_size_fail2_DEPENDENCIES) $(EXTRA_check_fvector_size_fail2_DEPENDENCIES) 
	@rm -f check_fvector_size_fail2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(check_fvector_size_fail2_OBJECTS) $(check_fvector_size_fail2_LDADD) $(LIBS)
conversiontest$(EXEEXT): $(conversiontest_OBJECTS) $(conversiontest_DEPENDENCIES) $(EXTRA_conversiontest_DEPENDENCIES) 
	@rm -f conversiontest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(conversiontest_OBJECTS) $(conversiontest_LDADD) $(LIBS)
diagonalmatrixtest$(EXEEXT): $(diagonalmatrixtest_OBJECTS) $(diagonalmatrixtest_DEPENDENCIES) $(EXTRA_diagonalmatrixtest_DEPENDENCIES) 
	@rm -f diagonalmatrixtest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(diagonalmatrixtest_OBJECTS) $(diagonalmatrixtest_LDADD) $(LIBS)
dynmatrixtest$(EXEEXT): $(dynmatrixtest_OBJECTS) $(dynmatrixtest_DEPENDENCIES) $(EXTRA_dynmatrixtest_DEPENDENCIES) 
	@rm -f dynmatrixtest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dynmatrixtest_OBJECTS) $(dynmatrixtest_LDADD) $(LIBS)
dynvectortest$(EXEEXT): $(dynvectortest_OBJECTS) $(dynvectortest_DEPENDENCIES) $(EXTRA_dynvectortest_DEPENDENCIES) 
	@rm -f dynvectortest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dynvectortest_OBJECTS) $(dynvectortest_LDADD) $(LIBS)
eigenvaluestest$(EXEEXT): $(eigenvaluestest_OBJECTS) $(eigenvaluestest_DEPENDENCIES) $(EXTRA_eigenvaluestest_DEPENDENCIES) 
	@rm -f eigenvaluestest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(eigenvaluestest_OBJECTS) $(eigenvaluestest_LDADD) $(LIBS)
enumsettest$(EXEEXT): $(enumsettest_OBJECTS) $(enumsettest_DEPENDENCIES) $(EXTRA_enumsettest_DEPENDENCIES) 
	@rm -f enumsettest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(enumsettest_OBJECTS) $(enumsettest_LDADD) $(LIBS)
fassigntest$(EXEEXT): $(fassigntest_OBJECTS) $(fassigntest_DEPENDENCIES) $(EXTRA_fassigntest_DEPENDENCIES) 
	@rm -f fassigntest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fassigntest_OBJECTS) $(fassigntest_LDADD) $(LIBS)
fmatrixtest$(EXEEXT): $(fmatrixtest_OBJECTS) $(fmatrixtest_DEPENDENCIES) $(EXTRA_fmatrixtest_DEPENDENCIES) 
	@rm -f fmatrixtest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fmatrixtest_OBJECTS) $(fmatrixtest_LDADD) $(LIBS)
fvectortest$(EXEEXT): $(fvectortest_OBJECTS) $(fvectortest_DEPENDENCIES) $(EXTRA_fvectortest_DEPENDENCIES) 
	@rm -f fvectortest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fvectortest_OBJECTS) $(fvectortest_LDADD) $(LIBS)
gcdlcmtest$(EXEEXT): $(gcdlcmtest_OBJECTS) $(gcdlcmtest_DEPENDENCIES) $(EXTRA_gcdlcmtest_DEPENDENCIES) 
	@rm -f gcdlcmtest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(gcdlcmtest_OBJECTS) $(gcdlcmtest_LDADD) $(LIBS)
genericiterator_compile_fail$(EXEEXT): $(genericiterator_compile_fail_OBJECTS) $(genericiterator_compile_fail_DEPENDENCIES) $(EXTRA_genericiterator_compile_fail_DEPENDENCIES) 
	@rm -f genericiterator_compile_fail$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(genericiterator_compile_fail_OBJECTS) $(genericiterator_compile_fail_LDADD) $(LIBS)
iteratorfacadetest$(EXEEXT): $(iteratorfacadetest_OBJECTS) $(iteratorfacadetest_DEPENDENCIES) $(EXTRA_iteratorfacadetest_DEPENDENCIES) 
	@rm -f iteratorfacadetest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(iteratorfacadetest_OBJECTS) $(iteratorfacadetest_LDADD) $(LIBS)
iteratorfacadetest2$(EXEEXT): $(iteratorfacadetest2_OBJECTS) $(iteratorfacadetest2_DEPENDENCIES) $(EXTRA_iteratorfacadetest2_DEPENDENCIES) 
	@rm -f iteratorfacadetest2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(iteratorfacadetest2_OBJECTS) $(iteratorfacadetest2_LDADD) $(LIBS)
lrutest$(EXEEXT): $(lrutest_OBJECTS) $(lrutest_DEPENDENCIES) $(EXTRA_lrutest_DEPENDENCIES) 
	@rm -f lrutest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(lrutest_OBJECTS) $(lrutest_LDADD) $(LIBS)
mpicollectivecommunication$(EXEEXT): $(mpicollectivecommunication_OBJECTS) $(mpicollectivecommunication_DEPENDENCIES) $(EXTRA_mpicollectivecommunication_DEPENDENCIES) 
	@rm -f mpicollectivecommunication$(EXEEXT)
	$(AM_V_CXXLD)$(mpicollectivecommunication_LINK) $(mpicollectivecommunication_OBJECTS) $(mpicollectivecommunication_LDADD) $(LIBS)
mpiguardtest$(EXEEXT): $(mpiguardtest_OBJECTS) $(mpiguardtest_DEPENDENCIES) $(EXTRA_mpiguardtest_DEPENDENCIES) 
	@rm -f mpiguardtest$(EXEEXT)
	$(AM_V_CXXLD)$(mpiguardtest_LINK) $(mpiguardtest_OBJECTS) $(mpiguardtest_LDADD) $(LIBS)
mpihelpertest$(EXEEXT): $(mpihelpertest_OBJECTS) $(mpihelpertest_DEPENDENCIES) $(EXTRA_mpihelpertest_DEPENDENCIES) 
	@rm -f mpihelpertest$(EXEEXT)
	$(AM_V_CXXLD)$(mpihelpertest_LINK) $(mpihelpertest_OBJECTS) $(mpihelpertest_LDADD) $(LIBS)
mpihelpertest2$(EXEEXT): $(mpihelpertest2_OBJECTS) $(mpihelpertest2_DEPENDENCIES) $(EXTRA_mpihelpertest2_DEPENDENCIES) 
	@rm -f mpihelpertest2$(EXEEXT)
	$(AM_V_CXXLD)$(mpihelpertest2_LINK) $(mpihelpertest2_OBJECTS) $(mpihelpertest2_LDADD) $(LIBS)
nullptr-test$(EXEEXT): $(nullptr_test_OBJECTS) $(nullptr_test_DEPENDENCIES) $(EXTRA_nullptr_test_DEPENDENCIES) 
	@rm -f nullptr-test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nullptr_test_OBJECTS) $(nullptr_test_LDADD) $(LIBS)
nullptr-test-fail$(EXEEXT): $(nullptr_test_fail_OBJECTS) $(nullptr_test_fail_DEPENDENCIES) $(EXTRA_nullptr_test_fail_DEPENDENCIES) 
	@rm -f nullptr-test-fail$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nullptr_test_fail_OBJECTS) $(nullptr_test_fail_LDADD) $(LIBS)
parametertreetest$(EXEEXT): $(parametertreetest_OBJECTS) $(parametertreetest_DEPENDENCIES) $(EXTRA_parametertreetest_DEPENDENCIES) 
	@rm -f parametertreetest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(parametertreetest_OBJECTS) $(parametertreetest_LDADD) $(LIBS)
pathtest$(EXEEXT): $(pathtest_OBJECTS) $(pathtest_DEPENDENCIES) $(EXTRA_pathtest_DEPENDENCIES) 
	@rm -f pathtest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pathtest_OBJECTS) $(pathtest_LDADD) $(LIBS)
poolallocatortest$(EXEEXT): $(poolallocatortest_OBJECTS) $(poolallocatortest_DEPENDENCIES) $(EXTRA_poolallocatortest_DEPENDENCIES) 
	@rm -f poolallocatortest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(poolallocatortest_OBJECTS) $(poolallocatortest_LDADD) $(LIBS)
shared_ptrtest_config$(EXEEXT): $(shared_ptrtest_config_OBJECTS) $(shared_ptrtest_config_DEPENDENCIES) $(EXTRA_shared_ptrtest_config_DEPENDENCIES) 
	@rm -f shared_ptrtest_config$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(shared_ptrtest_config_OBJECTS) $(shared_ptrtest_config_LDADD) $(LIBS)
shared_ptrtest_dune$(EXEEXT): $(shared_ptrtest_dune_OBJECTS) $(shared_ptrtest_dune_DEPENDENCIES) $(EXTRA_shared_ptrtest_dune_DEPENDENCIES) 
	@rm -f shared_ptrtest_dune$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(shared_ptrtest_dune_OBJECTS) $(shared_ptrtest_dune_LDADD) $(LIBS)
singletontest$(EXEEXT): $(singletontest_OBJECTS) $(singletontest_DEPENDENCIES) $(EXTRA_singletontest_DEPENDENCIES) 
	@rm -f singletontest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(singletontest_OBJECTS) $(singletontest_LDADD) $(LIBS)
sllisttest$(EXEEXT): $(sllisttest_OBJECTS) $(sllisttest_DEPENDENCIES) $(EXTRA_sllisttest_DEPENDENCIES) 
	@rm -f sllisttest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sllisttest_OBJECTS) $(sllisttest_LDADD) $(LIBS)
static_assert_test$(EXEEXT): $(static_assert_test_OBJECTS) $(static_assert_test_DEPENDENCIES) $(EXTRA_static_assert_test_DEPENDENCIES) 
	@rm -f static_assert_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(static_assert_test_OBJECTS) $(static_assert_test_LDADD) $(LIBS)
static_assert_test_fail$(EXEEXT): $(static_assert_test_fail_OBJECTS) $(static_assert_test_fail_DEPENDENCIES) $(EXTRA_static_assert_test_fail_DEPENDENCIES) 
	@rm -f static_assert_test_fail$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(static_assert_test_fail_OBJECTS) $(static_assert_test_fail_LDADD) $(LIBS)
streamtest$(EXEEXT): $(streamtest_OBJECTS) $(streamtest_DEPENDENCIES) $(EXTRA_streamtest_DEPENDENCIES) 
	@rm -f streamtest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(streamtest_OBJECTS) $(streamtest_LDADD) $(LIBS)
testdebugallocator$(EXEEXT): $(testdebugallocator_OBJECTS) $(testdebugallocator_DEPENDENCIES) $(EXTRA_testdebugallocator_DEPENDENCIES) 
	@rm -f testdebugallocator$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testdebugallocator_OBJECTS) $(testdebugallocator_LDADD) $(LIBS)
testdebugallocator_fail1$(EXEEXT): $(testdebugallocator_fail1_OBJECTS) $(testdebugallocator_fail1_DEPENDENCIES) $(EXTRA_testdebugallocator_fail1_DEPENDENCIES) 
	@rm -f testdebugallocator_fail1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testdebugallocator_fail1_OBJECTS) $(testdebugallocator_fail1_LDADD) $(LIBS)
testdebugallocator_fail2$(EXEEXT): $(testdebugallocator_fail2_OBJECTS) $(testdebugallocator_fail2_DEPENDENCIES) $(EXTRA_testdebugallocator_fail2_DEPENDENCIES) 
	@rm -f testdebugallocator_fail2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testdebugallocator_fail2_OBJECTS) $(testdebugallocator_fail2_LDADD) $(LIBS)
testdebugallocator_fail3$(EXEEXT): $(testdebugallocator_fail3_OBJECTS) $(testdebugallocator_fail3_DEPENDENCIES) $(EXTRA_testdebugallocator_fail3_DEPENDENCIES) 
	@rm -f testdebugallocator_fail3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testdebugallocator_fail3_OBJECTS) $(testdebugallocator_fail3_LDADD) $(LIBS)
testdebugallocator_fail4$(EXEEXT): $(testdebugallocator_fail4_OBJECTS) $(testdebugallocator_fail4_DEPENDENCIES) $(EXTRA_testdebugallocator_fail4_DEPENDENCIES) 
	@rm -f testdebugallocator_fail4$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testdebugallocator_fail4_OBJECTS) $(testdebugallocator_fail4_LDADD) $(LIBS)
testdebugallocator_fail5$(EXEEXT): $(testdebugallocator_fail5_OBJECTS) $(testdebugallocator_fail5_DEPENDENCIES) $(EXTRA_testdebugallocator_fail5_DEPENDENCIES) 
	@rm -f testdebugallocator_fail5$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testdebugallocator_fail5_OBJECTS) $(testdebugallocator_fail5_LDADD) $(LIBS)
testfassign1$(EXEEXT): $(testfassign1_OBJECTS) $(testfassign1_DEPENDENCIES) $(EXTRA_testfassign1_DEPENDENCIES) 
	@rm -f testfassign1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfassign1_OBJECTS) $(testfassign1_LDADD) $(LIBS)
testfassign2$(EXEEXT): $(testfassign2_OBJECTS) $(testfassign2_DEPENDENCIES) $(EXTRA_testfassign2_DEPENDENCIES) 
	@rm -f testfassign2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfassign2_OBJECTS) $(testfassign2_LDADD) $(LIBS)
testfassign3$(EXEEXT): $(testfassign3_OBJECTS) $(testfassign3_DEPENDENCIES) $(EXTRA_testfassign3_DEPENDENCIES) 
	@rm -f testfassign3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfassign3_OBJECTS) $(testfassign3_LDADD) $(LIBS)
testfassign4$(EXEEXT): $(testfassign4_OBJECTS) $(testfassign4_DEPENDENCIES) $(EXTRA_testfassign4_DEPENDENCIES) 
	@rm -f testfassign4$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfassign4_OBJECTS) $(testfassign4_LDADD) $(LIBS)
testfassign_fail1$(EXEEXT): $(testfassign_fail1_OBJECTS) $(testfassign_fail1_DEPENDENCIES) $(EXTRA_testfassign_fail1_DEPENDENCIES) 
	@rm -f testfassign_fail1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfassign_fail1_OBJECTS) $(testfassign_fail1_LDADD) $(LIBS)
testfassign_fail2$(EXEEXT): $(testfassign_fail2_OBJECTS) $(testfassign_fail2_DEPENDENCIES) $(EXTRA_testfassign_fail2_DEPENDENCIES) 
	@rm -f testfassign_fail2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfassign_fail2_OBJECTS) $(testfassign_fail2_LDADD) $(LIBS)
testfassign_fail3$(EXEEXT): $(testfassign_fail3_OBJECTS) $(testfassign_fail3_DEPENDENCIES) $(EXTRA_testfassign_fail3_DEPENDENCIES) 
	@rm -f testfassign_fail3$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfassign_fail3_OBJECTS) $(testfassign_fail3_LDADD) $(LIBS)
testfassign_fail4$(EXEEXT): $(testfassign_fail4_OBJECTS) $(testfassign_fail4_DEPENDENCIES) $(EXTRA_testfassign_fail4_DEPENDENCIES) 
	@rm -f testfassign_fail4$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfassign_fail4_OBJECTS) $(testfassign_fail4_LDADD) $(LIBS)
testfassign_fail5$(EXEEXT): $(testfassign_fail5_OBJECTS) $(testfassign_fail5_DEPENDENCIES) $(EXTRA_testfassign_fail5_DEPENDENCIES) 
	@rm -f testfassign_fail5$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfassign_fail5_OBJECTS) $(testfassign_fail5_LDADD) $(LIBS)
testfassign_fail6$(EXEEXT): $(testfassign_fail6_OBJECTS) $(testfassign_fail6_DEPENDENCIES) $(EXTRA_testfassign_fail6_DEPENDENCIES) 
	@rm -f testfassign_fail6$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfassign_fail6_OBJECTS) $(testfassign_fail6_LDADD) $(LIBS)
testfconstruct$(EXEEXT): $(testfconstruct_OBJECTS) $(testfconstruct_DEPENDENCIES) $(EXTRA_testfconstruct_DEPENDENCIES) 
	@rm -f testfconstruct$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfconstruct_OBJECTS) $(testfconstruct_LDADD) $(LIBS)
testfconstruct_fail1$(EXEEXT): $(testfconstruct_fail1_OBJECTS) $(testfconstruct_fail1_DEPENDENCIES) $(EXTRA_testfconstruct_fail1_DEPENDENCIES) 
	@rm -f testfconstruct_fail1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfconstruct_fail1_OBJECTS) $(testfconstruct_fail1_LDADD) $(LIBS)
testfconstruct_fail2$(EXEEXT): $(testfconstruct_fail2_OBJECTS) $(testfconstruct_fail2_DEPENDENCIES) $(EXTRA_testfconstruct_fail2_DEPENDENCIES) 
	@rm -f testfconstruct_fail2$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfconstruct_fail2_OBJECTS) $(testfconstruct_fail2_LDADD) $(LIBS)
testfloatcmp$(EXEEXT): $(testfloatcmp_OBJECTS) $(testfloatcmp_DEPENDENCIES) $(EXTRA_testfloatcmp_DEPENDENCIES) 
	@rm -f testfloatcmp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(testfloatcmp_OBJECTS) $(testfloatcmp_LDADD) $(LIBS)
tuplestest_dune$(EXEEXT): $(tuplestest_dune_OBJECTS) $(tuplestest_dune_DEPENDENCIES) $(EXTRA_tuplestest_dune_DEPENDENCIES) 
	@rm -f tuplestest_dune$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tuplestest_dune_OBJECTS) $(tuplestest_dune_LDADD) $(LIBS)
tuplestest_std$(EXEEXT): $(tuplestest_std_OBJECTS) $(tuplestest_std_DEPENDENCIES) $(EXTRA_tuplestest_std_DEPENDENCIES) 
	@rm -f tuplestest_std$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tuplestest_std_OBJECTS) $(tuplestest_std_LDADD) $(LIBS)
tuplestest_tr1$(EXEEXT): $(tuplestest_tr1_OBJECTS) $(tuplestest_tr1_DEPENDENCIES) $(EXTRA_tuplestest_tr1_DEPENDENCIES) 
	@rm -f tuplestest_tr1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tuplestest_tr1_OBJECTS) $(tuplestest_tr1_LDADD) $(LIBS)
tupleutilitytest$(EXEEXT): $(tupleutilitytest_OBJECTS) $(tupleutilitytest_DEPENDENCIES) $(EXTRA_tupleutilitytest_DEPENDENCIES) 
	@rm -f tupleutilitytest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(tupleutilitytest_OBJECTS) $(tupleutilitytest_LDADD) $(LIBS)
typetraitstest$(EXEEXT): $(typetraitstest_OBJECTS) $(typetraitstest_DEPENDENCIES) $(EXTRA_typetraitstest_DEPENDENCIES) 
	@rm -f typetraitstest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(typetraitstest_OBJECTS) $(typetraitstest_LDADD) $(LIBS)
utilitytest$(EXEEXT): $(utilitytest_OBJECTS) $(utilitytest_DEPENDENCIES) $(EXTRA_utilitytest_DEPENDENCIES) 
	@rm -f utilitytest$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(utilitytest_OBJECTS) $(utilitytest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/arraylisttest.Po
include ./$(DEPDIR)/arraytest.Po
include ./$(DEPDIR)/bigunsignedinttest-bigunsignedinttest.Po
include ./$(DEPDIR)/bitsetvectortest.Po
include ./$(DEPDIR)/check_fvector_size.Po
include ./$(DEPDIR)/check_fvector_size_fail1-check_fvector_size_fail.Po
include ./$(DEPDIR)/check_fvector_size_fail2-check_fvector_size_fail.Po
include ./$(DEPDIR)/conversiontest.Po
include ./$(DEPDIR)/diagonalmatrixtest.Po
include ./$(DEPDIR)/dynmatrixtest.Po
include ./$(DEPDIR)/dynvectortest.Po
include ./$(DEPDIR)/eigenvaluestest.Po
include ./$(DEPDIR)/enumsettest.Po
include ./$(DEPDIR)/fassigntest.Po
include ./$(DEPDIR)/fmatrixtest.Po
include ./$(DEPDIR)/fvectortest.Po
include ./$(DEPDIR)/gcdlcmtest.Po
include ./$(DEPDIR)/genericiterator_compile_fail.Po
include ./$(DEPDIR)/iteratorfacadetest.Po
include ./$(DEPDIR)/iteratorfacadetest2.Po
include ./$(DEPDIR)/lrutest.Po
include ./$(DEPDIR)/mpicollectivecommunication-mpicollectivecommunication.Po
include ./$(DEPDIR)/mpiguardtest-mpiguardtest.Po
include ./$(DEPDIR)/mpihelpertest-mpihelpertest.Po
include ./$(DEPDIR)/mpihelpertest2-mpihelpertest.Po
include ./$(DEPDIR)/nullptr-test.Po
include ./$(DEPDIR)/nullptr-test2.Po
include ./$(DEPDIR)/nullptr_test_fail-nullptr-test.Po
include ./$(DEPDIR)/parametertreetest.Po
include ./$(DEPDIR)/pathtest.Po
include ./$(DEPDIR)/poolallocatortest.Po
include ./$(DEPDIR)/shared_ptrtest.Po
include ./$(DEPDIR)/shared_ptrtest_dune-shared_ptrtest.Po
include ./$(DEPDIR)/singletontest.Po
include ./$(DEPDIR)/sllisttest.Po
include ./$(DEPDIR)/static_assert_test.Po
include ./$(DEPDIR)/static_assert_test_fail.Po
include ./$(DEPDIR)/streamtest.Po
include ./$(DEPDIR)/testdebugallocator-testdebugallocator.Po
include ./$(DEPDIR)/testdebugallocator_fail1-testdebugallocator.Po
include ./$(DEPDIR)/testdebugallocator_fail2-testdebugallocator.Po
include ./$(DEPDIR)/testdebugallocator_fail3-testdebugallocator.Po
include ./$(DEPDIR)/testdebugallocator_fail4-testdebugallocator.Po
include ./$(DEPDIR)/testdebugallocator_fail5-testdebugallocator.Po
include ./$(DEPDIR)/testfassign1-testfassign.Po
include ./$(DEPDIR)/testfassign1-testfassign2.Po
include ./$(DEPDIR)/testfassign2-testfassign.Po
include ./$(DEPDIR)/testfassign3-testfassign.Po
include ./$(DEPDIR)/testfassign4-testfassign.Po
include ./$(DEPDIR)/testfassign_fail1-testfassign.Po
include ./$(DEPDIR)/testfassign_fail2-testfassign.Po
include ./$(DEPDIR)/testfassign_fail3-testfassign.Po
include ./$(DEPDIR)/testfassign_fail4-testfassign.Po
include ./$(DEPDIR)/testfassign_fail5-testfassign.Po
include ./$(DEPDIR)/testfassign_fail6-testfassign.Po
include ./$(DEPDIR)/testfconstruct-testfconstruct.Po
include ./$(DEPDIR)/testfconstruct_fail1-testfconstruct.Po
include ./$(DEPDIR)/testfconstruct_fail2-testfconstruct.Po
include ./$(DEPDIR)/testfloatcmp.Po
include ./$(DEPDIR)/tuplestest.Po
include ./$(DEPDIR)/tuplestest_dune-tuplestest.Po
include ./$(DEPDIR)/tuplestest_tr1-tuplestest.Po
include ./$(DEPDIR)/tupleutilitytest.Po
include ./$(DEPDIR)/typetraitstest.Po
include ./$(DEPDIR)/utilitytest.Po

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

bigunsignedinttest-bigunsignedinttest.o: bigunsignedinttest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bigunsignedinttest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigunsignedinttest-bigunsignedinttest.o -MD -MP -MF $(DEPDIR)/bigunsignedinttest-bigunsignedinttest.Tpo -c -o bigunsignedinttest-bigunsignedinttest.o `test -f 'bigunsignedinttest.cc' || echo '$(srcdir)/'`bigunsignedinttest.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/bigunsignedinttest-bigunsignedinttest.Tpo $(DEPDIR)/bigunsignedinttest-bigunsignedinttest.Po
#	$(AM_V_CXX)source='bigunsignedinttest.cc' object='bigunsignedinttest-bigunsignedinttest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bigunsignedinttest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigunsignedinttest-bigunsignedinttest.o `test -f 'bigunsignedinttest.cc' || echo '$(srcdir)/'`bigunsignedinttest.cc

bigunsignedinttest-bigunsignedinttest.obj: bigunsignedinttest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bigunsignedinttest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bigunsignedinttest-bigunsignedinttest.obj -MD -MP -MF $(DEPDIR)/bigunsignedinttest-bigunsignedinttest.Tpo -c -o bigunsignedinttest-bigunsignedinttest.obj `if test -f 'bigunsignedinttest.cc'; then $(CYGPATH_W) 'bigunsignedinttest.cc'; else $(CYGPATH_W) '$(srcdir)/bigunsignedinttest.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bigunsignedinttest-bigunsignedinttest.Tpo $(DEPDIR)/bigunsignedinttest-bigunsignedinttest.Po
#	$(AM_V_CXX)source='bigunsignedinttest.cc' object='bigunsignedinttest-bigunsignedinttest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bigunsignedinttest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bigunsignedinttest-bigunsignedinttest.obj `if test -f 'bigunsignedinttest.cc'; then $(CYGPATH_W) 'bigunsignedinttest.cc'; else $(CYGPATH_W) '$(srcdir)/bigunsignedinttest.cc'; fi`

check_fvector_size_fail1-check_fvector_size_fail.o: check_fvector_size_fail.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(check_fvector_size_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT check_fvector_size_fail1-check_fvector_size_fail.o -MD -MP -MF $(DEPDIR)/check_fvector_size_fail1-check_fvector_size_fail.Tpo -c -o check_fvector_size_fail1-check_fvector_size_fail.o `test -f 'check_fvector_size_fail.cc' || echo '$(srcdir)/'`check_fvector_size_fail.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/check_fvector_size_fail1-check_fvector_size_fail.Tpo $(DEPDIR)/check_fvector_size_fail1-check_fvector_size_fail.Po
#	$(AM_V_CXX)source='check_fvector_size_fail.cc' object='check_fvector_size_fail1-check_fvector_size_fail.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(check_fvector_size_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o check_fvector_size_fail1-check_fvector_size_fail.o `test -f 'check_fvector_size_fail.cc' || echo '$(srcdir)/'`check_fvector_size_fail.cc

check_fvector_size_fail1-check_fvector_size_fail.obj: check_fvector_size_fail.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(check_fvector_size_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT check_fvector_size_fail1-check_fvector_size_fail.obj -MD -MP -MF $(DEPDIR)/check_fvector_size_fail1-check_fvector_size_fail.Tpo -c -o check_fvector_size_fail1-check_fvector_size_fail.obj `if test -f 'check_fvector_size_fail.cc'; then $(CYGPATH_W) 'check_fvector_size_fail.cc'; else $(CYGPATH_W) '$(srcdir)/check_fvector_size_fail.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/check_fvector_size_fail1-check_fvector_size_fail.Tpo $(DEPDIR)/check_fvector_size_fail1-check_fvector_size_fail.Po
#	$(AM_V_CXX)source='check_fvector_size_fail.cc' object='check_fvector_size_fail1-check_fvector_size_fail.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(check_fvector_size_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o check_fvector_size_fail1-check_fvector_size_fail.obj `if test -f 'check_fvector_size_fail.cc'; then $(CYGPATH_W) 'check_fvector_size_fail.cc'; else $(CYGPATH_W) '$(srcdir)/check_fvector_size_fail.cc'; fi`

check_fvector_size_fail2-check_fvector_size_fail.o: check_fvector_size_fail.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(check_fvector_size_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT check_fvector_size_fail2-check_fvector_size_fail.o -MD -MP -MF $(DEPDIR)/check_fvector_size_fail2-check_fvector_size_fail.Tpo -c -o check_fvector_size_fail2-check_fvector_size_fail.o `test -f 'check_fvector_size_fail.cc' || echo '$(srcdir)/'`check_fvector_size_fail.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/check_fvector_size_fail2-check_fvector_size_fail.Tpo $(DEPDIR)/check_fvector_size_fail2-check_fvector_size_fail.Po
#	$(AM_V_CXX)source='check_fvector_size_fail.cc' object='check_fvector_size_fail2-check_fvector_size_fail.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(check_fvector_size_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o check_fvector_size_fail2-check_fvector_size_fail.o `test -f 'check_fvector_size_fail.cc' || echo '$(srcdir)/'`check_fvector_size_fail.cc

check_fvector_size_fail2-check_fvector_size_fail.obj: check_fvector_size_fail.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(check_fvector_size_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT check_fvector_size_fail2-check_fvector_size_fail.obj -MD -MP -MF $(DEPDIR)/check_fvector_size_fail2-check_fvector_size_fail.Tpo -c -o check_fvector_size_fail2-check_fvector_size_fail.obj `if test -f 'check_fvector_size_fail.cc'; then $(CYGPATH_W) 'check_fvector_size_fail.cc'; else $(CYGPATH_W) '$(srcdir)/check_fvector_size_fail.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/check_fvector_size_fail2-check_fvector_size_fail.Tpo $(DEPDIR)/check_fvector_size_fail2-check_fvector_size_fail.Po
#	$(AM_V_CXX)source='check_fvector_size_fail.cc' object='check_fvector_size_fail2-check_fvector_size_fail.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(check_fvector_size_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o check_fvector_size_fail2-check_fvector_size_fail.obj `if test -f 'check_fvector_size_fail.cc'; then $(CYGPATH_W) 'check_fvector_size_fail.cc'; else $(CYGPATH_W) '$(srcdir)/check_fvector_size_fail.cc'; fi`

mpicollectivecommunication-mpicollectivecommunication.o: mpicollectivecommunication.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpicollectivecommunication_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mpicollectivecommunication-mpicollectivecommunication.o -MD -MP -MF $(DEPDIR)/mpicollectivecommunication-mpicollectivecommunication.Tpo -c -o mpicollectivecommunication-mpicollectivecommunication.o `test -f 'mpicollectivecommunication.cc' || echo '$(srcdir)/'`mpicollectivecommunication.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpicollectivecommunication-mpicollectivecommunication.Tpo $(DEPDIR)/mpicollectivecommunication-mpicollectivecommunication.Po
#	$(AM_V_CXX)source='mpicollectivecommunication.cc' object='mpicollectivecommunication-mpicollectivecommunication.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpicollectivecommunication_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mpicollectivecommunication-mpicollectivecommunication.o `test -f 'mpicollectivecommunication.cc' || echo '$(srcdir)/'`mpicollectivecommunication.cc

mpicollectivecommunication-mpicollectivecommunication.obj: mpicollectivecommunication.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpicollectivecommunication_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mpicollectivecommunication-mpicollectivecommunication.obj -MD -MP -MF $(DEPDIR)/mpicollectivecommunication-mpicollectivecommunication.Tpo -c -o mpicollectivecommunication-mpicollectivecommunication.obj `if test -f 'mpicollectivecommunication.cc'; then $(CYGPATH_W) 'mpicollectivecommunication.cc'; else $(CYGPATH_W) '$(srcdir)/mpicollectivecommunication.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpicollectivecommunication-mpicollectivecommunication.Tpo $(DEPDIR)/mpicollectivecommunication-mpicollectivecommunication.Po
#	$(AM_V_CXX)source='mpicollectivecommunication.cc' object='mpicollectivecommunication-mpicollectivecommunication.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpicollectivecommunication_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mpicollectivecommunication-mpicollectivecommunication.obj `if test -f 'mpicollectivecommunication.cc'; then $(CYGPATH_W) 'mpicollectivecommunication.cc'; else $(CYGPATH_W) '$(srcdir)/mpicollectivecommunication.cc'; fi`

mpiguardtest-mpiguardtest.o: mpiguardtest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpiguardtest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mpiguardtest-mpiguardtest.o -MD -MP -MF $(DEPDIR)/mpiguardtest-mpiguardtest.Tpo -c -o mpiguardtest-mpiguardtest.o `test -f 'mpiguardtest.cc' || echo '$(srcdir)/'`mpiguardtest.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpiguardtest-mpiguardtest.Tpo $(DEPDIR)/mpiguardtest-mpiguardtest.Po
#	$(AM_V_CXX)source='mpiguardtest.cc' object='mpiguardtest-mpiguardtest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpiguardtest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mpiguardtest-mpiguardtest.o `test -f 'mpiguardtest.cc' || echo '$(srcdir)/'`mpiguardtest.cc

mpiguardtest-mpiguardtest.obj: mpiguardtest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpiguardtest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mpiguardtest-mpiguardtest.obj -MD -MP -MF $(DEPDIR)/mpiguardtest-mpiguardtest.Tpo -c -o mpiguardtest-mpiguardtest.obj `if test -f 'mpiguardtest.cc'; then $(CYGPATH_W) 'mpiguardtest.cc'; else $(CYGPATH_W) '$(srcdir)/mpiguardtest.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpiguardtest-mpiguardtest.Tpo $(DEPDIR)/mpiguardtest-mpiguardtest.Po
#	$(AM_V_CXX)source='mpiguardtest.cc' object='mpiguardtest-mpiguardtest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpiguardtest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mpiguardtest-mpiguardtest.obj `if test -f 'mpiguardtest.cc'; then $(CYGPATH_W) 'mpiguardtest.cc'; else $(CYGPATH_W) '$(srcdir)/mpiguardtest.cc'; fi`

mpihelpertest-mpihelpertest.o: mpihelpertest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpihelpertest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mpihelpertest-mpihelpertest.o -MD -MP -MF $(DEPDIR)/mpihelpertest-mpihelpertest.Tpo -c -o mpihelpertest-mpihelpertest.o `test -f 'mpihelpertest.cc' || echo '$(srcdir)/'`mpihelpertest.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpihelpertest-mpihelpertest.Tpo $(DEPDIR)/mpihelpertest-mpihelpertest.Po
#	$(AM_V_CXX)source='mpihelpertest.cc' object='mpihelpertest-mpihelpertest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpihelpertest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mpihelpertest-mpihelpertest.o `test -f 'mpihelpertest.cc' || echo '$(srcdir)/'`mpihelpertest.cc

mpihelpertest-mpihelpertest.obj: mpihelpertest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpihelpertest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mpihelpertest-mpihelpertest.obj -MD -MP -MF $(DEPDIR)/mpihelpertest-mpihelpertest.Tpo -c -o mpihelpertest-mpihelpertest.obj `if test -f 'mpihelpertest.cc'; then $(CYGPATH_W) 'mpihelpertest.cc'; else $(CYGPATH_W) '$(srcdir)/mpihelpertest.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpihelpertest-mpihelpertest.Tpo $(DEPDIR)/mpihelpertest-mpihelpertest.Po
#	$(AM_V_CXX)source='mpihelpertest.cc' object='mpihelpertest-mpihelpertest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpihelpertest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mpihelpertest-mpihelpertest.obj `if test -f 'mpihelpertest.cc'; then $(CYGPATH_W) 'mpihelpertest.cc'; else $(CYGPATH_W) '$(srcdir)/mpihelpertest.cc'; fi`

mpihelpertest2-mpihelpertest.o: mpihelpertest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpihelpertest2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mpihelpertest2-mpihelpertest.o -MD -MP -MF $(DEPDIR)/mpihelpertest2-mpihelpertest.Tpo -c -o mpihelpertest2-mpihelpertest.o `test -f 'mpihelpertest.cc' || echo '$(srcdir)/'`mpihelpertest.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpihelpertest2-mpihelpertest.Tpo $(DEPDIR)/mpihelpertest2-mpihelpertest.Po
#	$(AM_V_CXX)source='mpihelpertest.cc' object='mpihelpertest2-mpihelpertest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpihelpertest2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mpihelpertest2-mpihelpertest.o `test -f 'mpihelpertest.cc' || echo '$(srcdir)/'`mpihelpertest.cc

mpihelpertest2-mpihelpertest.obj: mpihelpertest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpihelpertest2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mpihelpertest2-mpihelpertest.obj -MD -MP -MF $(DEPDIR)/mpihelpertest2-mpihelpertest.Tpo -c -o mpihelpertest2-mpihelpertest.obj `if test -f 'mpihelpertest.cc'; then $(CYGPATH_W) 'mpihelpertest.cc'; else $(CYGPATH_W) '$(srcdir)/mpihelpertest.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mpihelpertest2-mpihelpertest.Tpo $(DEPDIR)/mpihelpertest2-mpihelpertest.Po
#	$(AM_V_CXX)source='mpihelpertest.cc' object='mpihelpertest2-mpihelpertest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpihelpertest2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mpihelpertest2-mpihelpertest.obj `if test -f 'mpihelpertest.cc'; then $(CYGPATH_W) 'mpihelpertest.cc'; else $(CYGPATH_W) '$(srcdir)/mpihelpertest.cc'; fi`

nullptr_test_fail-nullptr-test.o: nullptr-test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nullptr_test_fail_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nullptr_test_fail-nullptr-test.o -MD -MP -MF $(DEPDIR)/nullptr_test_fail-nullptr-test.Tpo -c -o nullptr_test_fail-nullptr-test.o `test -f 'nullptr-test.cc' || echo '$(srcdir)/'`nullptr-test.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/nullptr_test_fail-nullptr-test.Tpo $(DEPDIR)/nullptr_test_fail-nullptr-test.Po
#	$(AM_V_CXX)source='nullptr-test.cc' object='nullptr_test_fail-nullptr-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nullptr_test_fail_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nullptr_test_fail-nullptr-test.o `test -f 'nullptr-test.cc' || echo '$(srcdir)/'`nullptr-test.cc

nullptr_test_fail-nullptr-test.obj: nullptr-test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nullptr_test_fail_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nullptr_test_fail-nullptr-test.obj -MD -MP -MF $(DEPDIR)/nullptr_test_fail-nullptr-test.Tpo -c -o nullptr_test_fail-nullptr-test.obj `if test -f 'nullptr-test.cc'; then $(CYGPATH_W) 'nullptr-test.cc'; else $(CYGPATH_W) '$(srcdir)/nullptr-test.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nullptr_test_fail-nullptr-test.Tpo $(DEPDIR)/nullptr_test_fail-nullptr-test.Po
#	$(AM_V_CXX)source='nullptr-test.cc' object='nullptr_test_fail-nullptr-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(nullptr_test_fail_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nullptr_test_fail-nullptr-test.obj `if test -f 'nullptr-test.cc'; then $(CYGPATH_W) 'nullptr-test.cc'; else $(CYGPATH_W) '$(srcdir)/nullptr-test.cc'; fi`

shared_ptrtest_dune-shared_ptrtest.o: shared_ptrtest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(shared_ptrtest_dune_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shared_ptrtest_dune-shared_ptrtest.o -MD -MP -MF $(DEPDIR)/shared_ptrtest_dune-shared_ptrtest.Tpo -c -o shared_ptrtest_dune-shared_ptrtest.o `test -f 'shared_ptrtest.cc' || echo '$(srcdir)/'`shared_ptrtest.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/shared_ptrtest_dune-shared_ptrtest.Tpo $(DEPDIR)/shared_ptrtest_dune-shared_ptrtest.Po
#	$(AM_V_CXX)source='shared_ptrtest.cc' object='shared_ptrtest_dune-shared_ptrtest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(shared_ptrtest_dune_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shared_ptrtest_dune-shared_ptrtest.o `test -f 'shared_ptrtest.cc' || echo '$(srcdir)/'`shared_ptrtest.cc

shared_ptrtest_dune-shared_ptrtest.obj: shared_ptrtest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(shared_ptrtest_dune_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shared_ptrtest_dune-shared_ptrtest.obj -MD -MP -MF $(DEPDIR)/shared_ptrtest_dune-shared_ptrtest.Tpo -c -o shared_ptrtest_dune-shared_ptrtest.obj `if test -f 'shared_ptrtest.cc'; then $(CYGPATH_W) 'shared_ptrtest.cc'; else $(CYGPATH_W) '$(srcdir)/shared_ptrtest.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shared_ptrtest_dune-shared_ptrtest.Tpo $(DEPDIR)/shared_ptrtest_dune-shared_ptrtest.Po
#	$(AM_V_CXX)source='shared_ptrtest.cc' object='shared_ptrtest_dune-shared_ptrtest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(shared_ptrtest_dune_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shared_ptrtest_dune-shared_ptrtest.obj `if test -f 'shared_ptrtest.cc'; then $(CYGPATH_W) 'shared_ptrtest.cc'; else $(CYGPATH_W) '$(srcdir)/shared_ptrtest.cc'; fi`

testdebugallocator-testdebugallocator.o: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator-testdebugallocator.o -MD -MP -MF $(DEPDIR)/testdebugallocator-testdebugallocator.Tpo -c -o testdebugallocator-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator-testdebugallocator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc

testdebugallocator-testdebugallocator.obj: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator-testdebugallocator.obj -MD -MP -MF $(DEPDIR)/testdebugallocator-testdebugallocator.Tpo -c -o testdebugallocator-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator-testdebugallocator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`

testdebugallocator_fail1-testdebugallocator.o: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator_fail1-testdebugallocator.o -MD -MP -MF $(DEPDIR)/testdebugallocator_fail1-testdebugallocator.Tpo -c -o testdebugallocator_fail1-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator_fail1-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator_fail1-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator_fail1-testdebugallocator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator_fail1-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc

testdebugallocator_fail1-testdebugallocator.obj: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator_fail1-testdebugallocator.obj -MD -MP -MF $(DEPDIR)/testdebugallocator_fail1-testdebugallocator.Tpo -c -o testdebugallocator_fail1-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator_fail1-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator_fail1-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator_fail1-testdebugallocator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator_fail1-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`

testdebugallocator_fail2-testdebugallocator.o: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator_fail2-testdebugallocator.o -MD -MP -MF $(DEPDIR)/testdebugallocator_fail2-testdebugallocator.Tpo -c -o testdebugallocator_fail2-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator_fail2-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator_fail2-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator_fail2-testdebugallocator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator_fail2-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc

testdebugallocator_fail2-testdebugallocator.obj: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator_fail2-testdebugallocator.obj -MD -MP -MF $(DEPDIR)/testdebugallocator_fail2-testdebugallocator.Tpo -c -o testdebugallocator_fail2-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator_fail2-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator_fail2-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator_fail2-testdebugallocator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator_fail2-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`

testdebugallocator_fail3-testdebugallocator.o: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator_fail3-testdebugallocator.o -MD -MP -MF $(DEPDIR)/testdebugallocator_fail3-testdebugallocator.Tpo -c -o testdebugallocator_fail3-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator_fail3-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator_fail3-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator_fail3-testdebugallocator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator_fail3-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc

testdebugallocator_fail3-testdebugallocator.obj: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator_fail3-testdebugallocator.obj -MD -MP -MF $(DEPDIR)/testdebugallocator_fail3-testdebugallocator.Tpo -c -o testdebugallocator_fail3-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator_fail3-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator_fail3-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator_fail3-testdebugallocator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator_fail3-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`

testdebugallocator_fail4-testdebugallocator.o: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator_fail4-testdebugallocator.o -MD -MP -MF $(DEPDIR)/testdebugallocator_fail4-testdebugallocator.Tpo -c -o testdebugallocator_fail4-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator_fail4-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator_fail4-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator_fail4-testdebugallocator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator_fail4-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc

testdebugallocator_fail4-testdebugallocator.obj: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator_fail4-testdebugallocator.obj -MD -MP -MF $(DEPDIR)/testdebugallocator_fail4-testdebugallocator.Tpo -c -o testdebugallocator_fail4-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator_fail4-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator_fail4-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator_fail4-testdebugallocator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator_fail4-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`

testdebugallocator_fail5-testdebugallocator.o: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail5_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator_fail5-testdebugallocator.o -MD -MP -MF $(DEPDIR)/testdebugallocator_fail5-testdebugallocator.Tpo -c -o testdebugallocator_fail5-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator_fail5-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator_fail5-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator_fail5-testdebugallocator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail5_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator_fail5-testdebugallocator.o `test -f 'testdebugallocator.cc' || echo '$(srcdir)/'`testdebugallocator.cc

testdebugallocator_fail5-testdebugallocator.obj: testdebugallocator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail5_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testdebugallocator_fail5-testdebugallocator.obj -MD -MP -MF $(DEPDIR)/testdebugallocator_fail5-testdebugallocator.Tpo -c -o testdebugallocator_fail5-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testdebugallocator_fail5-testdebugallocator.Tpo $(DEPDIR)/testdebugallocator_fail5-testdebugallocator.Po
#	$(AM_V_CXX)source='testdebugallocator.cc' object='testdebugallocator_fail5-testdebugallocator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testdebugallocator_fail5_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testdebugallocator_fail5-testdebugallocator.obj `if test -f 'testdebugallocator.cc'; then $(CYGPATH_W) 'testdebugallocator.cc'; else $(CYGPATH_W) '$(srcdir)/testdebugallocator.cc'; fi`

testfassign1-testfassign.o: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign1-testfassign.o -MD -MP -MF $(DEPDIR)/testfassign1-testfassign.Tpo -c -o testfassign1-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign1-testfassign.Tpo $(DEPDIR)/testfassign1-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign1-testfassign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign1-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc

testfassign1-testfassign.obj: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign1-testfassign.obj -MD -MP -MF $(DEPDIR)/testfassign1-testfassign.Tpo -c -o testfassign1-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign1-testfassign.Tpo $(DEPDIR)/testfassign1-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign1-testfassign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign1-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`

testfassign1-testfassign2.o: testfassign2.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign1-testfassign2.o -MD -MP -MF $(DEPDIR)/testfassign1-testfassign2.Tpo -c -o testfassign1-testfassign2.o `test -f 'testfassign2.cc' || echo '$(srcdir)/'`testfassign2.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign1-testfassign2.Tpo $(DEPDIR)/testfassign1-testfassign2.Po
#	$(AM_V_CXX)source='testfassign2.cc' object='testfassign1-testfassign2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign1-testfassign2.o `test -f 'testfassign2.cc' || echo '$(srcdir)/'`testfassign2.cc

testfassign1-testfassign2.obj: testfassign2.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign1-testfassign2.obj -MD -MP -MF $(DEPDIR)/testfassign1-testfassign2.Tpo -c -o testfassign1-testfassign2.obj `if test -f 'testfassign2.cc'; then $(CYGPATH_W) 'testfassign2.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign2.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign1-testfassign2.Tpo $(DEPDIR)/testfassign1-testfassign2.Po
#	$(AM_V_CXX)source='testfassign2.cc' object='testfassign1-testfassign2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign1-testfassign2.obj `if test -f 'testfassign2.cc'; then $(CYGPATH_W) 'testfassign2.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign2.cc'; fi`

testfassign2-testfassign.o: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign2-testfassign.o -MD -MP -MF $(DEPDIR)/testfassign2-testfassign.Tpo -c -o testfassign2-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign2-testfassign.Tpo $(DEPDIR)/testfassign2-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign2-testfassign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign2-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc

testfassign2-testfassign.obj: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign2-testfassign.obj -MD -MP -MF $(DEPDIR)/testfassign2-testfassign.Tpo -c -o testfassign2-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign2-testfassign.Tpo $(DEPDIR)/testfassign2-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign2-testfassign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign2-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`

testfassign3-testfassign.o: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign3-testfassign.o -MD -MP -MF $(DEPDIR)/testfassign3-testfassign.Tpo -c -o testfassign3-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign3-testfassign.Tpo $(DEPDIR)/testfassign3-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign3-testfassign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign3-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc

testfassign3-testfassign.obj: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign3-testfassign.obj -MD -MP -MF $(DEPDIR)/testfassign3-testfassign.Tpo -c -o testfassign3-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign3-testfassign.Tpo $(DEPDIR)/testfassign3-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign3-testfassign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign3-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`

testfassign4-testfassign.o: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign4-testfassign.o -MD -MP -MF $(DEPDIR)/testfassign4-testfassign.Tpo -c -o testfassign4-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign4-testfassign.Tpo $(DEPDIR)/testfassign4-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign4-testfassign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign4-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc

testfassign4-testfassign.obj: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign4-testfassign.obj -MD -MP -MF $(DEPDIR)/testfassign4-testfassign.Tpo -c -o testfassign4-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign4-testfassign.Tpo $(DEPDIR)/testfassign4-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign4-testfassign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign4-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`

testfassign_fail1-testfassign.o: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail1-testfassign.o -MD -MP -MF $(DEPDIR)/testfassign_fail1-testfassign.Tpo -c -o testfassign_fail1-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail1-testfassign.Tpo $(DEPDIR)/testfassign_fail1-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail1-testfassign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail1-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc

testfassign_fail1-testfassign.obj: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail1-testfassign.obj -MD -MP -MF $(DEPDIR)/testfassign_fail1-testfassign.Tpo -c -o testfassign_fail1-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail1-testfassign.Tpo $(DEPDIR)/testfassign_fail1-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail1-testfassign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail1-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`

testfassign_fail2-testfassign.o: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail2-testfassign.o -MD -MP -MF $(DEPDIR)/testfassign_fail2-testfassign.Tpo -c -o testfassign_fail2-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail2-testfassign.Tpo $(DEPDIR)/testfassign_fail2-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail2-testfassign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail2-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc

testfassign_fail2-testfassign.obj: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail2-testfassign.obj -MD -MP -MF $(DEPDIR)/testfassign_fail2-testfassign.Tpo -c -o testfassign_fail2-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail2-testfassign.Tpo $(DEPDIR)/testfassign_fail2-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail2-testfassign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail2-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`

testfassign_fail3-testfassign.o: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail3-testfassign.o -MD -MP -MF $(DEPDIR)/testfassign_fail3-testfassign.Tpo -c -o testfassign_fail3-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail3-testfassign.Tpo $(DEPDIR)/testfassign_fail3-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail3-testfassign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail3-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc

testfassign_fail3-testfassign.obj: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail3-testfassign.obj -MD -MP -MF $(DEPDIR)/testfassign_fail3-testfassign.Tpo -c -o testfassign_fail3-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail3-testfassign.Tpo $(DEPDIR)/testfassign_fail3-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail3-testfassign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail3_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail3-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`

testfassign_fail4-testfassign.o: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail4-testfassign.o -MD -MP -MF $(DEPDIR)/testfassign_fail4-testfassign.Tpo -c -o testfassign_fail4-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail4-testfassign.Tpo $(DEPDIR)/testfassign_fail4-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail4-testfassign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail4-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc

testfassign_fail4-testfassign.obj: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail4-testfassign.obj -MD -MP -MF $(DEPDIR)/testfassign_fail4-testfassign.Tpo -c -o testfassign_fail4-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail4-testfassign.Tpo $(DEPDIR)/testfassign_fail4-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail4-testfassign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail4_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail4-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`

testfassign_fail5-testfassign.o: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail5_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail5-testfassign.o -MD -MP -MF $(DEPDIR)/testfassign_fail5-testfassign.Tpo -c -o testfassign_fail5-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail5-testfassign.Tpo $(DEPDIR)/testfassign_fail5-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail5-testfassign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail5_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail5-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc

testfassign_fail5-testfassign.obj: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail5_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail5-testfassign.obj -MD -MP -MF $(DEPDIR)/testfassign_fail5-testfassign.Tpo -c -o testfassign_fail5-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail5-testfassign.Tpo $(DEPDIR)/testfassign_fail5-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail5-testfassign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail5_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail5-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`

testfassign_fail6-testfassign.o: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail6_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail6-testfassign.o -MD -MP -MF $(DEPDIR)/testfassign_fail6-testfassign.Tpo -c -o testfassign_fail6-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail6-testfassign.Tpo $(DEPDIR)/testfassign_fail6-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail6-testfassign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail6_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail6-testfassign.o `test -f 'testfassign.cc' || echo '$(srcdir)/'`testfassign.cc

testfassign_fail6-testfassign.obj: testfassign.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail6_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfassign_fail6-testfassign.obj -MD -MP -MF $(DEPDIR)/testfassign_fail6-testfassign.Tpo -c -o testfassign_fail6-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfassign_fail6-testfassign.Tpo $(DEPDIR)/testfassign_fail6-testfassign.Po
#	$(AM_V_CXX)source='testfassign.cc' object='testfassign_fail6-testfassign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfassign_fail6_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfassign_fail6-testfassign.obj `if test -f 'testfassign.cc'; then $(CYGPATH_W) 'testfassign.cc'; else $(CYGPATH_W) '$(srcdir)/testfassign.cc'; fi`

testfconstruct-testfconstruct.o: testfconstruct.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfconstruct-testfconstruct.o -MD -MP -MF $(DEPDIR)/testfconstruct-testfconstruct.Tpo -c -o testfconstruct-testfconstruct.o `test -f 'testfconstruct.cc' || echo '$(srcdir)/'`testfconstruct.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfconstruct-testfconstruct.Tpo $(DEPDIR)/testfconstruct-testfconstruct.Po
#	$(AM_V_CXX)source='testfconstruct.cc' object='testfconstruct-testfconstruct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfconstruct-testfconstruct.o `test -f 'testfconstruct.cc' || echo '$(srcdir)/'`testfconstruct.cc

testfconstruct-testfconstruct.obj: testfconstruct.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfconstruct-testfconstruct.obj -MD -MP -MF $(DEPDIR)/testfconstruct-testfconstruct.Tpo -c -o testfconstruct-testfconstruct.obj `if test -f 'testfconstruct.cc'; then $(CYGPATH_W) 'testfconstruct.cc'; else $(CYGPATH_W) '$(srcdir)/testfconstruct.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfconstruct-testfconstruct.Tpo $(DEPDIR)/testfconstruct-testfconstruct.Po
#	$(AM_V_CXX)source='testfconstruct.cc' object='testfconstruct-testfconstruct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfconstruct-testfconstruct.obj `if test -f 'testfconstruct.cc'; then $(CYGPATH_W) 'testfconstruct.cc'; else $(CYGPATH_W) '$(srcdir)/testfconstruct.cc'; fi`

testfconstruct_fail1-testfconstruct.o: testfconstruct.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfconstruct_fail1-testfconstruct.o -MD -MP -MF $(DEPDIR)/testfconstruct_fail1-testfconstruct.Tpo -c -o testfconstruct_fail1-testfconstruct.o `test -f 'testfconstruct.cc' || echo '$(srcdir)/'`testfconstruct.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfconstruct_fail1-testfconstruct.Tpo $(DEPDIR)/testfconstruct_fail1-testfconstruct.Po
#	$(AM_V_CXX)source='testfconstruct.cc' object='testfconstruct_fail1-testfconstruct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfconstruct_fail1-testfconstruct.o `test -f 'testfconstruct.cc' || echo '$(srcdir)/'`testfconstruct.cc

testfconstruct_fail1-testfconstruct.obj: testfconstruct.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfconstruct_fail1-testfconstruct.obj -MD -MP -MF $(DEPDIR)/testfconstruct_fail1-testfconstruct.Tpo -c -o testfconstruct_fail1-testfconstruct.obj `if test -f 'testfconstruct.cc'; then $(CYGPATH_W) 'testfconstruct.cc'; else $(CYGPATH_W) '$(srcdir)/testfconstruct.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfconstruct_fail1-testfconstruct.Tpo $(DEPDIR)/testfconstruct_fail1-testfconstruct.Po
#	$(AM_V_CXX)source='testfconstruct.cc' object='testfconstruct_fail1-testfconstruct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_fail1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfconstruct_fail1-testfconstruct.obj `if test -f 'testfconstruct.cc'; then $(CYGPATH_W) 'testfconstruct.cc'; else $(CYGPATH_W) '$(srcdir)/testfconstruct.cc'; fi`

testfconstruct_fail2-testfconstruct.o: testfconstruct.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfconstruct_fail2-testfconstruct.o -MD -MP -MF $(DEPDIR)/testfconstruct_fail2-testfconstruct.Tpo -c -o testfconstruct_fail2-testfconstruct.o `test -f 'testfconstruct.cc' || echo '$(srcdir)/'`testfconstruct.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfconstruct_fail2-testfconstruct.Tpo $(DEPDIR)/testfconstruct_fail2-testfconstruct.Po
#	$(AM_V_CXX)source='testfconstruct.cc' object='testfconstruct_fail2-testfconstruct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfconstruct_fail2-testfconstruct.o `test -f 'testfconstruct.cc' || echo '$(srcdir)/'`testfconstruct.cc

testfconstruct_fail2-testfconstruct.obj: testfconstruct.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT testfconstruct_fail2-testfconstruct.obj -MD -MP -MF $(DEPDIR)/testfconstruct_fail2-testfconstruct.Tpo -c -o testfconstruct_fail2-testfconstruct.obj `if test -f 'testfconstruct.cc'; then $(CYGPATH_W) 'testfconstruct.cc'; else $(CYGPATH_W) '$(srcdir)/testfconstruct.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/testfconstruct_fail2-testfconstruct.Tpo $(DEPDIR)/testfconstruct_fail2-testfconstruct.Po
#	$(AM_V_CXX)source='testfconstruct.cc' object='testfconstruct_fail2-testfconstruct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testfconstruct_fail2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o testfconstruct_fail2-testfconstruct.obj `if test -f 'testfconstruct.cc'; then $(CYGPATH_W) 'testfconstruct.cc'; else $(CYGPATH_W) '$(srcdir)/testfconstruct.cc'; fi`

tuplestest_dune-tuplestest.o: tuplestest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tuplestest_dune_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuplestest_dune-tuplestest.o -MD -MP -MF $(DEPDIR)/tuplestest_dune-tuplestest.Tpo -c -o tuplestest_dune-tuplestest.o `test -f 'tuplestest.cc' || echo '$(srcdir)/'`tuplestest.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/tuplestest_dune-tuplestest.Tpo $(DEPDIR)/tuplestest_dune-tuplestest.Po
#	$(AM_V_CXX)source='tuplestest.cc' object='tuplestest_dune-tuplestest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tuplestest_dune_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuplestest_dune-tuplestest.o `test -f 'tuplestest.cc' || echo '$(srcdir)/'`tuplestest.cc

tuplestest_dune-tuplestest.obj: tuplestest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tuplestest_dune_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuplestest_dune-tuplestest.obj -MD -MP -MF $(DEPDIR)/tuplestest_dune-tuplestest.Tpo -c -o tuplestest_dune-tuplestest.obj `if test -f 'tuplestest.cc'; then $(CYGPATH_W) 'tuplestest.cc'; else $(CYGPATH_W) '$(srcdir)/tuplestest.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tuplestest_dune-tuplestest.Tpo $(DEPDIR)/tuplestest_dune-tuplestest.Po
#	$(AM_V_CXX)source='tuplestest.cc' object='tuplestest_dune-tuplestest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tuplestest_dune_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuplestest_dune-tuplestest.obj `if test -f 'tuplestest.cc'; then $(CYGPATH_W) 'tuplestest.cc'; else $(CYGPATH_W) '$(srcdir)/tuplestest.cc'; fi`

tuplestest_tr1-tuplestest.o: tuplestest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tuplestest_tr1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuplestest_tr1-tuplestest.o -MD -MP -MF $(DEPDIR)/tuplestest_tr1-tuplestest.Tpo -c -o tuplestest_tr1-tuplestest.o `test -f 'tuplestest.cc' || echo '$(srcdir)/'`tuplestest.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/tuplestest_tr1-tuplestest.Tpo $(DEPDIR)/tuplestest_tr1-tuplestest.Po
#	$(AM_V_CXX)source='tuplestest.cc' object='tuplestest_tr1-tuplestest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tuplestest_tr1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuplestest_tr1-tuplestest.o `test -f 'tuplestest.cc' || echo '$(srcdir)/'`tuplestest.cc

tuplestest_tr1-tuplestest.obj: tuplestest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tuplestest_tr1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuplestest_tr1-tuplestest.obj -MD -MP -MF $(DEPDIR)/tuplestest_tr1-tuplestest.Tpo -c -o tuplestest_tr1-tuplestest.obj `if test -f 'tuplestest.cc'; then $(CYGPATH_W) 'tuplestest.cc'; else $(CYGPATH_W) '$(srcdir)/tuplestest.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tuplestest_tr1-tuplestest.Tpo $(DEPDIR)/tuplestest_tr1-tuplestest.Po
#	$(AM_V_CXX)source='tuplestest.cc' object='tuplestest_tr1-tuplestest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tuplestest_tr1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuplestest_tr1-tuplestest.obj `if test -f 'tuplestest.cc'; then $(CYGPATH_W) 'tuplestest.cc'; else $(CYGPATH_W) '$(srcdir)/tuplestest.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-testincludeHEADERS: $(testinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(testinclude_HEADERS)'; test -n "$(testincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(testincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(testincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(testincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(testincludedir)" || exit $$?; \
	done

uninstall-testincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(testinclude_HEADERS)'; test -n "$(testincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(testincludedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(testincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local install-testincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-local uninstall-testincludeHEADERS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-testincludeHEADERS installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	maintainer-clean-local mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-local \
	uninstall-testincludeHEADERS


compile_XFAIL:
	for i in $(COMPILE_XFAIL_TESTS); do \
	  if $(MAKE) $$i; then \
	    echo "ERROR: target $$i did compile, although it is listed in the COMPILE_XFAIL_TESTS"; \
	    exit 1; \
	  else true; \
	  fi; \
	done

sourcescheck: sourcescheck-recursive

#	@(for f in $(sourcescheck_LIST) fnord; do echo $$f; done) | \
#	 grep '\.[hc][hc]$$' | sort | uniq > header_CHECK.install
sourcescheck-am:
	@echo $(sourcescheck_LIST) | tr ' ' '\n' | \
	 grep '\.[hcm][hc4]$$' | sort | uniq > header_CHECK.install
	@(ls $(srcdir); echo $(sourcescheck_DUMMY)) | \
	 grep '\.[hcm][hc4]$$' | sort | uniq > header_CHECK.present
	@RESULT=0; \
	if diff header_CHECK.* | grep ^[\<\>] -q; then \
		echo "==== WARNING ===="; \
	    echo "Directory: $(srcdir)"; \
		echo "Files present but not installed:"; \
		diff -u header_CHECK.install header_CHECK.present | \
		grep -v ^+++ | grep ^+; \
		echo "Files listed for install but not present:"; \
		diff -u header_CHECK.install header_CHECK.present | \
		grep -v ^--- | grep ^-; \
		echo "==== END ===="; \
		RESULT=1; \
	fi; \
	rm -f header_CHECK.install header_CHECK.present; \
	exit $$RESULT

sourcescheck-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

.PHONY: sourcescheck sourcescheck-recursive sourcescheck-am

# set 
# headercheck_IGNORE = foo.hh
# to ignore foo.hh

hctest.o: hctest.cc
	$(CXX) -I$(top_builddir) -I$(top_srcdir) -DHEADERCHECK \
	  $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \
	  $(DUNEMPICPPFLAGS) $(ALL_PKG_CPPFLAGS) -c -o $@ $<

headercheck:
	@if test "x$V" = "x"; then \
      SILENTSTR='V=$(AM_DEFAULT_VERBOSITY)' ; \
    fi; \
    if test "x$SILENT" = "x1"; then \
      SILENTSTR='V=0' ; \
    fi; \
    if test "x$SILENT" = "x0"; then \
      SILENTSTR='V=1' ; \
    fi; \
    if test x"$$HEADER" = "x"; then \
	  $(MAKE) $$SILENTSTR $(AM_MAKEFLAGS) headercheck-recursive; \
	else \
	  $(MAKE) $$SILENTSTR $(AM_MAKEFLAGS) headercheck-am; \
	fi

headercheck-am:
	@if test x"$$HEADER" != "x"; then \
	  list="$$HEADER"; \
	else \
	  pushd "$(srcdir)" > /dev/null; \
	  list=`echo $(headercheck_PATTERN)`; \
	  popd > /dev/null; \
	fi; \
    test -z "$$NO_CONFIG_H" && NO_CONFIG_H=0; \
	test "$$list" != "$(headercheck_PATTERN)" || exit 0; \
	for f in $$list; do \
	echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; \
	  if echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; then continue; fi; \
	  HEADER="$(subdir)/$$f"; \
	  echo "checking $$HEADER"; \
	  CCFILE=hctest.cc; \
	  OFILE=hctest.o; \
	  LOGFILE=hctest.log; \
	  rm -f $$CCFILE; \
	  test $$NO_CONFIG_H -ne 0 && echo "    without config.h" \
	    || echo "#include <config.h>" > $$CCFILE; \
	  echo "#include <$${HEADER}>" >> $$CCFILE; \
	  echo "#include <$${HEADER}>" >> $$CCFILE; \
	  echo "int main () { return 0; }" >> $$CCFILE; \
	  make 	$$OFILE > $$LOGFILE 2>&1; \
	  SUCCESS=$$?; \
	  if ! (test $$SUCCESS -eq 0 && test -e $$OFILE); then \
	    echo "Error in $$HEADER"; \
            test $V -ne 1 && echo "run with V=1 to show details" || cat $$LOGFILE; \
	  fi; \
	  warnings=`grep 'warning' $$LOGFILE`; \
	  FOUNDWARNINGS=$$?; \
	  if ( test $$FOUNDWARNINGS -eq 0 && test -e $$OFILE ); then \
	    echo "Warnings in $$HEADER"; \
	    test $V -ne 1 && echo "run with V=1 to show details" || cat $$LOGFILE; \
	  fi; \
	  rm -f $$OFILE; \
	  rm -f $$CCFILE; \
	  rm -f $$LOGFILE; \
	  test $$SUCCESS -eq 0 || exit $$SUCCESS; \
	done

headercheck-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $(subdir)/$$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

.PHONY: headercheck headercheck-recursive headercheck-am

# vim:set filetype=automake:

$(DUNE_COMMON_ROOT)/bin/check-log-store: $(DUNE_COMMON_ROOT)/bin/check-log-store.in
	cd $(DUNE_COMMON_ROOT)/bin/ && $(MAKE) check-log-store

check-log: $(DUNE_COMMON_ROOT)/bin/check-log-store
check-log:
	rm -f $(LOG_FILE)

check-log: check-log-libs
check-log: check-log-build
check-log: check-log-test
check-log: check-log-sources
check-log: check-log-headers
check-log: check-log-dir

check-log-libs: check-log-libs-recursive
check-log-build: check-log-build-recursive
check-log-test: check-log-test-recursive
check-log-sources: check-log-sources-recursive
check-log-headers: check-log-headers-recursive
check-log-dir: check-log-dir-recursive

check-log-headers-am:
	$(LOG_SET_OPTIONS); \
	list=`echo $(headercheck_PATTERN)`; \
	test "$$list" != "$(headercheck_PATTERN)" || exit 0; \
	for f in $$list; do \
	  echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; \
	    if echo "$(headercheck_IGNORE)" | tr ' ' '\n' | grep -q "$$f"; then continue; fi; \
	  $(LOG_TIMING) ($(MAKE) headercheck-am SILENT=0 HEADER=$$f; \
	    $(MAKE) headercheck-am SILENT=0 HEADER=$$f NO_CONFIG_H=1) > $(LOG_FILE) 2>&1; \
	  $(LOG_STORE) "headercheck" "$$f" "$$path"; \
	done

check-log-sources-am:
	$(LOG_SET_OPTIONS); \
	$(LOG_TIMING) $(MAKE) sourcescheck-am > $(LOG_FILE) 2>&1; \
	$(LOG_STORE) "sources" "Makefile.am" "$$path"

check-log-libs-am:
	$(LOG_SET_OPTIONS); \
	for lib in $(LTLIBRARIES); do \
	  $(LOG_TIMING) ($(MAKE) $$lib) > $(LOG_FILE) 2>&1; \
	  $(LOG_STORE) "lib" "$$lib" "$$path"; \
	done;

check-log-build-am:
	$(LOG_SET_OPTIONS); \
	for target in $(check_PROGRAMS) $(PROGRAMS); do \
	  $(LOG_TIMING) ($(MAKE) $$target) > $(LOG_FILE) 2>&1; \
	  $(LOG_STORE) "build" "$$target" "$$path"; \
	done;

check-log-test-am:
	@LOG () { \
	  echo "$$1" > $(LOG_FILE).2; \
	  cat $(LOG_FILE) >> $(LOG_FILE).2; \
	  mv $(LOG_FILE).2 $(LOG_FILE); \
	}; \
	$(LOG_SET_OPTIONS); \
	for tst in $(TESTS); do \
	  if test -f ./$$tst; then dir=./; \
	  elif test -f $$tst; then dir=; \
	  else dir="$(srcdir)/"; fi; \
	  echo "TEST $${dir}$$tst"; \
	  if $(LOG_TIMING) $(TESTS_ENVIRONMENT) $${dir}$$tst > $(LOG_FILE) 2>&1; then \
	    case " $(XFAIL_TESTS) " in \
	    *" $$tst "*) \
	      LOG "ERROR: XPASS ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 1 0; \
	    ;; \
	    *) \
	      LOG "SUCCESS: PASS ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 0 0; \
	    ;; \
	    esac; \
	  elif test $$? -ne 77; then \
	    case " $(XFAIL_TESTS) " in \
	    *" $$tst "*) \
	      LOG "SUCCESS: XFAIL ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 0 0; \
	    ;; \
	    *) \
	      LOG "ERROR: FAIL ($$tst)"; \
		  $(LOG_STORE) "run" "$$tst" "$$path" 1 0; \
	    ;; \
	    esac; \
	  else \
	    LOG "WARNING: SKIP ($$tst)"; \
		$(LOG_STORE) "run" "$$tst" "$$path" 0 1; \
	  fi; \
	done;

check-log-dir-am:
	$(LOG_SET_OPTIONS); \
	$(LOG_STORE) "dir" "$$dir" "$$ppath"

check-log-libs-recursive \
check-log-build-recursive \
check-log-test-recursive \
check-log-sources-recursive \
check-log-headers-recursive \
check-log-dir-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

.PHONY: check-log \
	check-log-lib check-log-lib-am check-log-lib-recursive \
	check-log-build check-log-build-am check-log-build-recursive \
	check-log-test check-log-test-am check-log-test-recursive \
	check-log-sources check-log-sources-am check-log-sources-recursive \
	check-log-dir check-log-dir-am check-log-dir-recursive

maintainer-clean-local: doc-clean-am

###
# build doc / web-install recursively
doc-clean-am: clean-am doc-clean-documentation doc-clean-local
doc-am: doc-all-documentation doc-local
web-install-am: web-install-local

doc-local:
doc-clean-local:
web-install-local:

web-install: web-install-recursive
doc: doc-recursive
doc-clean: doc-clean-recursive

web-install-recursive \
doc-clean-recursive \
doc-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $(subdir)/$$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

install-data-local: install-documentation
uninstall-local: uninstall-documentation

####
# "implementations"

doc-all-documentation: $(DOCFILES)

doc-clean-documentation:
	-test -z "$(DOCFILES)" || rm -f $(DOCFILES)

install-documentation: $(DOCFILES) install-documentation-local
	@$(NORMAL_INSTALL)
	test -z "$(docdir)" || $(MKDIR_P) "$(DESTDIR)$(docdir)"
	@list='$(DOCFILES) $(DOCFILES_EXTRA)'; test -n "$(docdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-documentation: uninstall-documentation-local
	@$(NORMAL_UNINSTALL)
	@list='$(DOCFILES) $(DOCFILES_EXTRA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(docdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(docdir)" && rm -f $$files

.PHONY: uninstall-documentation uninstall-documentation-local \
	install-documentation install-documentation-local \
    doc-clean-am doc-am web-install-am \
    doc-local doc-clean-local web-install-local \
	web-install doc doc-clean \
	web-install-recursive doc-clean-recursive doc-recursive

# add "sourcescheck"-target testing if all source files are mentioned

# check consistency of the headers (see FS#394)

# add "check-log"-target to create automated build logs

# add "doc"-target to create and clean documentation

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
